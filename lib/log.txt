[1;31mpkgcloud.js, line 51, character 7:[0m Expected 'hidden' at column 5, not column 7.
hidden = '_' + name;
[1;31mpkgcloud/amazon/client.js, line 9, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/amazon/client.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../core/base');
[1;31mpkgcloud/amazon/compute/flavor.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/flavor');
[1;31mpkgcloud/amazon/compute/flavor.js, line 36, character 28:[0m Expected '{' and instead saw 'throw'.
if (!Flavor.options[id]) throw new TypeError('No such AWS Flavor: ' + id);
[1;31mpkgcloud/amazon/compute/flavor.js, line 36, character 28:[0m Expected 'throw' at column 3, not column 28.
if (!Flavor.options[id]) throw new TypeError('No such AWS Flavor: ' + id);
[1;31mpkgcloud/amazon/compute/image.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/image');
[1;31mpkgcloud/amazon/compute/server.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/server');
[1;31mpkgcloud/amazon/compute/server.js, line 23, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PENDING':
[1;31mpkgcloud/amazon/compute/server.js, line 24, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.provisioning;
[1;31mpkgcloud/amazon/compute/server.js, line 25, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/amazon/compute/server.js, line 26, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RUNNING':
[1;31mpkgcloud/amazon/compute/server.js, line 27, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.running;
[1;31mpkgcloud/amazon/compute/server.js, line 28, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/amazon/compute/server.js, line 29, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPING':
[1;31mpkgcloud/amazon/compute/server.js, line 30, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPED':
[1;31mpkgcloud/amazon/compute/server.js, line 31, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.stopped;
[1;31mpkgcloud/amazon/compute/server.js, line 32, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/amazon/compute/server.js, line 33, character 7:[0m Expected 'case' at column 5, not column 7.
case 'TERMINATED':
[1;31mpkgcloud/amazon/compute/server.js, line 34, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.terminated;
[1;31mpkgcloud/amazon/compute/server.js, line 35, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/amazon/compute/server.js, line 36, character 7:[0m Expected 'default' at column 5, not column 7.
default:
[1;31mpkgcloud/amazon/compute/server.js, line 37, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.unknown;
[1;31mpkgcloud/amazon/compute/server.js, line 38, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/amazon/compute/server.js, line 42, character 21:[0m Expected an identifier and instead saw 'private' (a reserved word).
var addresses = { private: [], public: [] };
[1;31mpkgcloud/amazon/compute/server.js, line 42, character 34:[0m Expected an identifier and instead saw 'public' (a reserved word).
var addresses = { private: [], public: [] };
[1;31mpkgcloud/amazon/compute/server.js, line 46, character 17:[0m Expected an identifier and instead saw 'public' (a reserved word).
addresses.public.push(details[prop]);
[1;31mpkgcloud/amazon/compute/server.js, line 52, character 17:[0m Expected an identifier and instead saw 'private' (a reserved word).
addresses.private.push(details[prop]);
[1;31mpkgcloud/amazon/compute/client/flavors.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/amazon/compute/client/flavors.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.amazon.compute;
[1;31mpkgcloud/amazon/compute/client/groups.js, line 7, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/amazon/compute/client/groups.js, line 107, character 113:[0m Line too long.
//  - http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AuthorizeSecurityGroupIngress.html
[1;31mpkgcloud/amazon/compute/client/groups.js, line 125, character 11:[0m Unexpected space between 'rules' and ','.
rules ,
[1;31mpkgcloud/amazon/compute/client/groups.js, line 142, character 113:[0m Line too long.
//  - http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AuthorizeSecurityGroupIngress.html
[1;31mpkgcloud/amazon/compute/client/groups.js, line 160, character 11:[0m Unexpected space between 'rules' and ','.
rules ,
[1;31mpkgcloud/amazon/compute/client/images.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/amazon/compute/client/images.js, line 9, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/amazon/compute/client/images.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.amazon.compute;
[1;31mpkgcloud/amazon/compute/client/images.js, line 26, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/amazon/compute/client/images.js, line 32, character 10:[0m Move 'var' declarations to the top of the function.
for (var i = 0; i < options.owners.length; i++) {
[1;31mpkgcloud/amazon/compute/client/images.js, line 32, character 10:[0m Stopping.  (24% scanned).

[1;31mpkgcloud/amazon/compute/client/index.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile  = require('utile'),
[1;31mpkgcloud/amazon/compute/client/index.js, line 10, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/amazon/compute/client/index.js, line 11, character 5:[0m Expected 'xml2js' at column 3, not column 5.
xml2js = require('xml2js'),
[1;31mpkgcloud/amazon/compute/client/index.js, line 12, character 5:[0m Expected 'auth' at column 3, not column 5.
auth   = require('../../../common/auth'),
[1;31mpkgcloud/amazon/compute/client/index.js, line 13, character 5:[0m Expected 'amazon' at column 3, not column 5.
amazon = require('../../client');
[1;31mpkgcloud/amazon/compute/client/index.js, line 31, character 50:[0m 'query' is already defined.
Client.prototype._query = function query(action, query, callback) {
[1;31mpkgcloud/amazon/compute/client/keys.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/amazon/compute/client/servers.js, line 8, character 5:[0m Expected 'request' at column 3, not column 5.
request  = require('request'),
[1;31mpkgcloud/amazon/compute/client/servers.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/amazon/compute/client/servers.js, line 10, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/amazon/compute/client/servers.js, line 11, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/amazon/compute/client/servers.js, line 12, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.amazon.compute;
[1;31mpkgcloud/amazon/compute/client/servers.js, line 22, character 28:[0m Expected exactly one space between 'function' and '('.
process.nextTick(function() {
[1;31mpkgcloud/amazon/compute/client/servers.js, line 51, character 34:[0m Expected '{' at column 5, not column 34.
'DescribeInstanceAttribute', {
[1;31mpkgcloud/amazon/compute/client/servers.js, line 74, character 6:[0m Expected ')' at column 3, not column 6.
});
[1;31mpkgcloud/amazon/compute/client/servers.js, line 110, character 15:[0m Expected 'return' at column 13, not column 15.
return new compute.Server(self, server);
[1;31mpkgcloud/amazon/compute/client/servers.js, line 111, character 13:[0m Expected '}' at column 11, not column 13.
}), res);
[1;31mpkgcloud/amazon/compute/client/servers.js, line 137, character 7:[0m Expected 'meta' at column 5, not column 7.
meta = { name: options.name || '' },
[1;31mpkgcloud/amazon/compute/client/servers.js, line 138, character 7:[0m Expected 'createOptions' at column 5, not column 7.
createOptions = {
[1;31mpkgcloud/amazon/compute/client/servers.js, line 139, character 9:[0m Expected 'UserData' at column 7, not column 9.
UserData: new Buffer(JSON.stringify(meta)).toString('base64'),
[1;31mpkgcloud/amazon/compute/client/servers.js, line 140, character 9:[0m Expected 'MinCount' at column 7, not column 9.
MinCount: 1,
[1;31mpkgcloud/amazon/compute/client/servers.js, line 141, character 9:[0m Expected 'MaxCount' at column 7, not column 9.
MaxCount: 1
[1;31mpkgcloud/amazon/compute/client/servers.js, line 142, character 7:[0m Expected '}' at column 5, not column 7.
},
[1;31mpkgcloud/amazon/compute/client/servers.js, line 143, character 7:[0m Expected 'securityGroup' at column 5, not column 7.
securityGroup,
[1;31mpkgcloud/amazon/compute/client/servers.js, line 144, character 7:[0m Expected 'securityGroupId' at column 5, not column 7.
securityGroupId;
[1;31mpkgcloud/amazon/compute/client/servers.js, line 155, character 49:[0m ['SecurityGroup'] is better written in dot notation.
securityGroup = this.securityGroup || options['SecurityGroup'];
[1;31mpkgcloud/amazon/compute/client/servers.js, line 157, character 19:[0m ['SecurityGroup'] is better written in dot notation.
createOptions['SecurityGroup'] = securityGroup;
[1;31mpkgcloud/amazon/compute/client/servers.js, line 160, character 53:[0m ['SecurityGroupId'] is better written in dot notation.
securityGroupId = this.securityGroupId || options['SecurityGroupId'];
[1;31mpkgcloud/amazon/compute/client/servers.js, line 162, character 19:[0m ['SecurityGroupId'] is better written in dot notation.
createOptions['SecurityGroupId'] = securityGroupId;
[1;31mpkgcloud/amazon/compute/client/servers.js, line 233, character 7:[0m Expected 'serverId' at column 5, not column 7.
serverId = server instanceof base.Server ? server.id : server;
[1;31mpkgcloud/amazon/compute/client/servers.js, line 264, character 18:[0m Expected '{' and instead saw 'return'.
if (err) return callback(err);
[1;31mpkgcloud/amazon/compute/client/servers.js, line 264, character 18:[0m Expected 'return' at column 9, not column 18.
if (err) return callback(err);
[1;31mpkgcloud/amazon/storage/container.js, line 9, character 5:[0m Expected 'storage' at column 3, not column 5.
storage   = require('../storage'),
[1;31mpkgcloud/amazon/storage/container.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/storage/container');
[1;31mpkgcloud/amazon/storage/file.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/storage/file');
[1;31mpkgcloud/amazon/storage/utils.js, line 2, character 5:[0m Expected 'Stream' at column 3, not column 5.
Stream = require('stream').Stream;
[1;31mpkgcloud/amazon/storage/utils.js, line 31, character 9:[0m Expected 'parts' at column 7, not column 9.
parts = [];
[1;31mpkgcloud/amazon/storage/utils.js, line 34, character 32:[0m Expected '{' and instead saw 'return'.
if (total >= this.chunk) return true;
[1;31mpkgcloud/amazon/storage/utils.js, line 34, character 32:[0m Expected 'return' at column 7, not column 32.
if (total >= this.chunk) return true;
[1;31mpkgcloud/amazon/storage/utils.js, line 39, character 6:[0m Don't make functions within a loop.
}, this);
[1;31mpkgcloud/amazon/storage/utils.js, line 43, character 11:[0m Combine this with the previous 'var' statement.
var last = parts[parts.length - 1],
[1;31mpkgcloud/amazon/storage/utils.js, line 44, character 11:[0m Expected 'splitPos' at column 9, not column 11.
splitPos = last.length - total + this.chunk,
[1;31mpkgcloud/amazon/storage/utils.js, line 45, character 11:[0m Expected 'head' at column 9, not column 11.
head = last.slice(0, splitPos),
[1;31mpkgcloud/amazon/storage/utils.js, line 46, character 11:[0m Expected 'tail' at column 9, not column 11.
tail = last.slice(splitPos);
[1;31mpkgcloud/amazon/storage/utils.js, line 58, character 20:[0m Expected '{' and instead saw 'return'.
if (this.paused) return false;
[1;31mpkgcloud/amazon/storage/utils.js, line 58, character 20:[0m Expected 'return' at column 3, not column 20.
if (this.paused) return false;
[1;31mpkgcloud/amazon/storage/utils.js, line 62, character 19:[0m Expected '{' and instead saw 'return'.
if (this.ended) return;
[1;31mpkgcloud/amazon/storage/utils.js, line 62, character 19:[0m Expected 'return' at column 3, not column 19.
if (this.ended) return;
[1;31mpkgcloud/amazon/storage/utils.js, line 84, character 20:[0m Expected '{' and instead saw 'return'.
if (this.paused) return;
[1;31mpkgcloud/amazon/storage/utils.js, line 84, character 20:[0m Expected 'return' at column 3, not column 20.
if (this.paused) return;
[1;31mpkgcloud/amazon/storage/utils.js, line 89, character 21:[0m Expected '{' and instead saw 'return'.
if (!this.paused) return;
[1;31mpkgcloud/amazon/storage/utils.js, line 89, character 21:[0m Expected 'return' at column 3, not column 21.
if (!this.paused) return;
[1;31mpkgcloud/amazon/storage/client/containers.js, line 101, character 11:[0m Expected 'method' at column 9, not column 11.
method: 'DELETE',
[1;31mpkgcloud/amazon/storage/client/containers.js, line 102, character 11:[0m Expected 'container' at column 9, not column 11.
container: containerName
[1;31mpkgcloud/amazon/storage/client/containers.js, line 103, character 9:[0m Expected '}' at column 7, not column 9.
}, function (err, body, res) {
[1;31mpkgcloud/amazon/storage/client/containers.js, line 104, character 11:[0m Expected 'return' at column 9, not column 11.
return err
[1;31mpkgcloud/amazon/storage/client/containers.js, line 106, character 45:[0m Expected '===' and instead saw '=='.
: callback(null, res.statusCode == 204);
[1;31mpkgcloud/amazon/storage/client/containers.js, line 107, character 9:[0m Expected '}' at column 7, not column 9.
}
[1;31mpkgcloud/amazon/storage/client/containers.js, line 108, character 7:[0m Expected ')' at column 9, not column 7.
);
[1;31mpkgcloud/amazon/storage/client/files.js, line 9, character 5:[0m Expected 'filed' at column 3, not column 5.
filed = require('filed'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 10, character 5:[0m Expected 'mime' at column 3, not column 5.
mime = require('mime'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 11, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 12, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 13, character 5:[0m Expected 'qs' at column 3, not column 5.
qs = require('querystring'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 14, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../../core/storage'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 15, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/amazon/storage/client/files.js, line 16, character 5:[0m Expected 'storage' at column 3, not column 5.
storage = pkgcloud.providers.amazon.storage;
[1;31mpkgcloud/amazon/storage/client/files.js, line 18, character 1:[0m Expected an identifier and instead saw 'const'.
const MAX_UPLOAD = 5 * 1024 * 1024 * 1024;
[1;31mpkgcloud/amazon/storage/client/files.js, line 18, character 1:[0m Stopping.  (4% scanned).

[1;31mpkgcloud/amazon/storage/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/amazon/storage/client/index.js, line 10, character 5:[0m Expected 'xml2js' at column 3, not column 5.
xml2js = require('xml2js'),
[1;31mpkgcloud/amazon/storage/client/index.js, line 11, character 5:[0m Expected 'auth' at column 3, not column 5.
auth = require('../../../common/auth'),
[1;31mpkgcloud/amazon/storage/client/index.js, line 12, character 5:[0m Expected 'amazon' at column 3, not column 5.
amazon = require('../../client');
[1;31mpkgcloud/azure/client.js, line 9, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/azure/client.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../core/base');
[1;31mpkgcloud/azure/compute/flavor.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/flavor');
[1;31mpkgcloud/azure/compute/flavor.js, line 28, character 28:[0m Expected '{' and instead saw 'throw'.
if (!Flavor.options[id]) throw new TypeError('No such Azure Flavor: ' + id);
[1;31mpkgcloud/azure/compute/flavor.js, line 28, character 28:[0m Expected 'throw' at column 3, not column 28.
if (!Flavor.options[id]) throw new TypeError('No such Azure Flavor: ' + id);
[1;31mpkgcloud/azure/compute/image.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/image');
[1;31mpkgcloud/azure/compute/server.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/server');
[1;31mpkgcloud/azure/compute/server.js, line 29, character 126:[0m Line too long.
//console.log("Status: " + details.Status + ' RoleInstanceList: ' + roleInstance ? roleInstance.InstanceStatus : 'UNKNOWN');
[1;31mpkgcloud/azure/compute/server.js, line 31, character 110:[0m Line too long.
// azure can return an inconsistent RoleInstance status (not in azure rest api docs) so we check everything.
[1;31mpkgcloud/azure/compute/server.js, line 32, character 114:[0m Line too long.
// an azure vm has a complicated state machine. We need to check the status of both the deployment and the role.
[1;31mpkgcloud/azure/compute/server.js, line 33, character 122:[0m Line too long.
// azure first starts a deployment and then starts a role. The role seems to go through STOPPEDVM, PROVISIONING and then
[1;31mpkgcloud/azure/compute/server.js, line 35, character 123:[0m Line too long.
// Note: since azureAPI has to wait until azure responds to our createServer request, we most likely will miss all of the
[1;31mpkgcloud/azure/compute/server.js, line 41, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PROVISIONING':
[1;31mpkgcloud/azure/compute/server.js, line 42, character 7:[0m Expected 'case' at column 5, not column 7.
case 'CREATINGVM':
[1;31mpkgcloud/azure/compute/server.js, line 43, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STARTINGVM':
[1;31mpkgcloud/azure/compute/server.js, line 44, character 7:[0m Expected 'case' at column 5, not column 7.
case 'CREATINGROLE':
[1;31mpkgcloud/azure/compute/server.js, line 45, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STARTINGROLE':
[1;31mpkgcloud/azure/compute/server.js, line 46, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RESTARTINGROLE':
[1;31mpkgcloud/azure/compute/server.js, line 47, character 7:[0m Expected 'case' at column 5, not column 7.
case 'BUSYROLE':
[1;31mpkgcloud/azure/compute/server.js, line 48, character 7:[0m Expected 'case' at column 5, not column 7.
case 'INITIALIZING':
[1;31mpkgcloud/azure/compute/server.js, line 49, character 7:[0m Expected 'case' at column 5, not column 7.
case 'BUSY':
[1;31mpkgcloud/azure/compute/server.js, line 50, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.provisioning;
[1;31mpkgcloud/azure/compute/server.js, line 51, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 52, character 7:[0m Expected 'case' at column 5, not column 7.
case 'READYROLE':
[1;31mpkgcloud/azure/compute/server.js, line 53, character 7:[0m Expected 'case' at column 5, not column 7.
case 'READY':
[1;31mpkgcloud/azure/compute/server.js, line 54, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.running;
[1;31mpkgcloud/azure/compute/server.js, line 55, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 56, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPING':
[1;31mpkgcloud/azure/compute/server.js, line 57, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPED':
[1;31mpkgcloud/azure/compute/server.js, line 58, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPINGROLE':
[1;31mpkgcloud/azure/compute/server.js, line 59, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPINGVM':
[1;31mpkgcloud/azure/compute/server.js, line 60, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPEDVM':
[1;31mpkgcloud/azure/compute/server.js, line 61, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.stopped;
[1;31mpkgcloud/azure/compute/server.js, line 62, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 63, character 7:[0m Expected 'case' at column 5, not column 7.
case 'DELETINGVM':
[1;31mpkgcloud/azure/compute/server.js, line 64, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.terminated;
[1;31mpkgcloud/azure/compute/server.js, line 65, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 66, character 7:[0m Expected 'case' at column 5, not column 7.
case 'ROLESTATEUNKNOWN':
[1;31mpkgcloud/azure/compute/server.js, line 67, character 7:[0m Expected 'case' at column 5, not column 7.
case 'UNKNOWN':
[1;31mpkgcloud/azure/compute/server.js, line 68, character 7:[0m Empty case.
default:
[1;31mpkgcloud/azure/compute/server.js, line 68, character 7:[0m Expected 'default' at column 5, not column 7.
default:
[1;31mpkgcloud/azure/compute/server.js, line 69, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.unknown;
[1;31mpkgcloud/azure/compute/server.js, line 70, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 75, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STARTING':
[1;31mpkgcloud/azure/compute/server.js, line 76, character 7:[0m Expected 'case' at column 5, not column 7.
case 'DEPLOYING':
[1;31mpkgcloud/azure/compute/server.js, line 77, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PROVISIONING':
[1;31mpkgcloud/azure/compute/server.js, line 78, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RUNNINGTRANSITIONING':
[1;31mpkgcloud/azure/compute/server.js, line 79, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.provisioning;
[1;31mpkgcloud/azure/compute/server.js, line 80, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 81, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RUNNING':
[1;31mpkgcloud/azure/compute/server.js, line 82, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.running;
[1;31mpkgcloud/azure/compute/server.js, line 83, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/azure/compute/server.js, line 84, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SUSPENDING':
[1;31mpkgcloud/azure/compute/server.js, line 85, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SUSPENDED':
[1;31mpkgcloud/azure/compute/server.js, line 86, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SUSPENDEDTRANSITIONING':
[1;31mpkgcloud/azure/compute/server.js, line 87, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.stopped;
[1;31mpkgcloud/azure/compute/server.js, line 87, character 9:[0m Too many errors. (70% scanned).

[1;31mpkgcloud/azure/compute/client/flavors.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/azure/compute/client/flavors.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.azure.compute;
[1;31mpkgcloud/azure/compute/client/images.js, line 33, character 11:[0m Expected 'return' at column 9, not column 11.
return new compute.Image(self, image);
[1;31mpkgcloud/azure/compute/client/images.js, line 34, character 9:[0m Expected '}' at column 7, not column 9.
}), res);
[1;31mpkgcloud/azure/compute/client/images.js, line 79, character 23:[0m Expected a conditional expression and instead saw an assignment.
options || (options = {});
[1;31mpkgcloud/azure/compute/client/images.js, line 79, character 27:[0m Expected an assignment or function call and instead saw an expression.
options || (options = {});
[1;31mpkgcloud/azure/compute/client/images.js, line 81, character 22:[0m Expected '{' and instead saw 'throw'.
if (!options.name) throw new TypeError('`name` is a required option');
[1;31mpkgcloud/azure/compute/client/images.js, line 81, character 22:[0m Expected 'throw' at column 3, not column 22.
if (!options.name) throw new TypeError('`name` is a required option');
[1;31mpkgcloud/azure/compute/client/images.js, line 82, character 24:[0m Expected '{' and instead saw 'throw'.
if (!options.server) throw new TypeError('`server` is a required option');
[1;31mpkgcloud/azure/compute/client/images.js, line 82, character 24:[0m Expected 'throw' at column 3, not column 24.
if (!options.server) throw new TypeError('`server` is a required option');
[1;31mpkgcloud/azure/compute/client/images.js, line 106, character 7:[0m Expected 'imageId' at column 5, not column 7.
imageId = image instanceof base.Image ? image.id : image,
[1;31mpkgcloud/azure/compute/client/images.js, line 107, character 7:[0m Expected 'path' at column 5, not column 7.
path = self.config.subscriptionId + '/services/images/' + imageId;
[1;31mpkgcloud/azure/compute/client/index.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/azure/compute/client/index.js, line 10, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/azure/compute/client/index.js, line 11, character 5:[0m Expected 'https' at column 3, not column 5.
https = require('https'),
[1;31mpkgcloud/azure/compute/client/index.js, line 12, character 5:[0m Expected 'auth' at column 3, not column 5.
auth = require('../../../common/auth'),
[1;31mpkgcloud/azure/compute/client/index.js, line 13, character 5:[0m Expected 'azureApi' at column 3, not column 5.
azureApi = require('../../utils/azureApi.js'),
[1;31mpkgcloud/azure/compute/client/index.js, line 14, character 5:[0m Expected 'xml2JSON' at column 3, not column 5.
xml2JSON = require('../../utils/xml2json.js').xml2JSON,
[1;31mpkgcloud/azure/compute/client/index.js, line 15, character 5:[0m Expected 'azure' at column 3, not column 5.
azure = require('../../client');
[1;31mpkgcloud/azure/compute/client/index.js, line 52, character 50:[0m 'query' is already defined.
Client.prototype._query = function query(action, query, callback) {
[1;31mpkgcloud/azure/compute/client/index.js, line 88, character 9:[0m Expected 'callback' at column 11, not column 9.
callback(err) :
[1;31mpkgcloud/azure/compute/client/index.js, line 89, character 9:[0m Expected 'callback' at column 11, not column 9.
callback(null, data, res);
[1;31mpkgcloud/azure/compute/client/keys.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/azure/compute/client/servers.js, line 46, character 7:[0m Expected 'servers' at column 5, not column 7.
servers = [];
[1;31mpkgcloud/azure/compute/client/servers.js, line 68, character 7:[0m Expected 'serverId' at column 5, not column 7.
serverId = server instanceof base.Server ? server.id : server;
[1;31mpkgcloud/azure/database/client/databases.js, line 34, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/azure/database/client/databases.js, line 74, character 3:[0m Expected ')' at column 5, not column 3.
);
[1;31mpkgcloud/azure/database/client/databases.js, line 78, character 104:[0m Line too long.
// ### @callback {Function} Continuation to respond to when complete. Returns array of Database objects.
[1;31mpkgcloud/azure/database/client/databases.js, line 81, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/azure/database/client/databases.js, line 113, character 10:[0m 'encodeTableUriComponent' was used before it was defined.
path = encodeTableUriComponent("Tables('" + id + "')");
[1;31mpkgcloud/azure/database/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/azure/database/client/index.js, line 10, character 5:[0m Expected 'auth' at column 3, not column 5.
auth = require('../../../common/auth'),
[1;31mpkgcloud/azure/database/client/index.js, line 11, character 5:[0m Expected 'azureApi' at column 3, not column 5.
azureApi = require('../../utils/azureApi.js'),
[1;31mpkgcloud/azure/database/client/index.js, line 12, character 5:[0m Expected 'xml2JSON' at column 3, not column 5.
xml2JSON = require('../../utils/xml2json.js').xml2JSON,
[1;31mpkgcloud/azure/database/client/index.js, line 13, character 5:[0m Expected 'azure' at column 3, not column 5.
azure = require('../../client');
[1;31mpkgcloud/azure/storage/container.js, line 9, character 5:[0m Expected 'storage' at column 3, not column 5.
storage   = require('../storage'),
[1;31mpkgcloud/azure/storage/container.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/storage/container');
[1;31mpkgcloud/azure/storage/file.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/storage/file');
[1;31mpkgcloud/azure/storage/file.js, line 23, character 110:[0m Line too long.
this.size = (properties && properties['Content-Length']) ? parseInt(properties['Content-Length'], 10) : 0;
[1;31mpkgcloud/azure/storage/utils.js, line 2, character 5:[0m Expected 'Stream' at column 3, not column 5.
Stream = require('stream').Stream;
[1;31mpkgcloud/azure/storage/utils.js, line 30, character 9:[0m Expected 'parts' at column 7, not column 9.
parts = [];
[1;31mpkgcloud/azure/storage/utils.js, line 33, character 32:[0m Expected '{' and instead saw 'return'.
if (total >= this.chunk) return true;
[1;31mpkgcloud/azure/storage/utils.js, line 33, character 32:[0m Expected 'return' at column 7, not column 32.
if (total >= this.chunk) return true;
[1;31mpkgcloud/azure/storage/utils.js, line 38, character 6:[0m Don't make functions within a loop.
}, this);
[1;31mpkgcloud/azure/storage/utils.js, line 42, character 11:[0m Combine this with the previous 'var' statement.
var last = parts[parts.length - 1],
[1;31mpkgcloud/azure/storage/utils.js, line 43, character 11:[0m Expected 'splitPos' at column 9, not column 11.
splitPos = last.length - total + this.chunk,
[1;31mpkgcloud/azure/storage/utils.js, line 44, character 11:[0m Expected 'head' at column 9, not column 11.
head = last.slice(0, splitPos),
[1;31mpkgcloud/azure/storage/utils.js, line 45, character 11:[0m Expected 'tail' at column 9, not column 11.
tail = last.slice(splitPos);
[1;31mpkgcloud/azure/storage/utils.js, line 57, character 20:[0m Expected '{' and instead saw 'return'.
if (this.paused) return false;
[1;31mpkgcloud/azure/storage/utils.js, line 57, character 20:[0m Expected 'return' at column 3, not column 20.
if (this.paused) return false;
[1;31mpkgcloud/azure/storage/utils.js, line 61, character 19:[0m Expected '{' and instead saw 'return'.
if (this.ended) return;
[1;31mpkgcloud/azure/storage/utils.js, line 61, character 19:[0m Expected 'return' at column 3, not column 19.
if (this.ended) return;
[1;31mpkgcloud/azure/storage/utils.js, line 83, character 20:[0m Expected '{' and instead saw 'return'.
if (this.paused) return;
[1;31mpkgcloud/azure/storage/utils.js, line 83, character 20:[0m Expected 'return' at column 3, not column 20.
if (this.paused) return;
[1;31mpkgcloud/azure/storage/utils.js, line 88, character 21:[0m Expected '{' and instead saw 'return'.
if (!this.paused) return;
[1;31mpkgcloud/azure/storage/utils.js, line 88, character 21:[0m Expected 'return' at column 3, not column 21.
if (!this.paused) return;
[1;31mpkgcloud/azure/storage/client/containers.js, line 9, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/azure/storage/client/containers.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../../core/storage'),
[1;31mpkgcloud/azure/storage/client/containers.js, line 11, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/azure/storage/client/containers.js, line 12, character 5:[0m Expected 'storage' at column 3, not column 5.
storage = pkgcloud.providers.azure.storage;
[1;31mpkgcloud/azure/storage/client/containers.js, line 49, character 7:[0m Expected 'self' at column 5, not column 7.
self = this,
[1;31mpkgcloud/azure/storage/client/containers.js, line 50, character 7:[0m Expected 'options' at column 5, not column 7.
options;
[1;31mpkgcloud/azure/storage/client/containers.js, line 80, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/azure/storage/client/containers.js, line 108, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/azure/storage/client/containers.js, line 119, character 39:[0m Expected '===' and instead saw '=='.
: callback(null, res.statusCode == 202);
[1;31mpkgcloud/azure/storage/client/containers.js, line 120, character 4:[0m Expected '}' at column 3, not column 4.
});
[1;31mpkgcloud/azure/storage/client/files.js, line 37, character 12:[0m Missing space between ':' and 'DELETE'.
method:'DELETE',
[1;31mpkgcloud/azure/storage/client/files.js, line 42, character 39:[0m Expected '===' and instead saw '=='.
: callback(null, res.statusCode == 202);
[1;31mpkgcloud/azure/storage/client/files.js, line 63, character 7:[0m Expected 'success' at column 5, not column 7.
success = callback ? onUpload : null,
[1;31mpkgcloud/azure/storage/client/files.js, line 64, character 7:[0m Expected 'path' at column 5, not column 7.
path,
[1;31mpkgcloud/azure/storage/client/files.js, line 65, character 7:[0m Expected 'rstream' at column 5, not column 7.
rstream,
[1;31mpkgcloud/azure/storage/client/files.js, line 66, character 7:[0m Expected 'lstream' at column 5, not column 7.
lstream;
[1;31mpkgcloud/azure/storage/client/files.js, line 78, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (options.stream) {
[1;31mpkgcloud/azure/storage/client/files.js, line 78, character 3:[0m Expected 'else' at column 5, not column 3.
else if (options.stream) {
[1;31mpkgcloud/azure/storage/client/files.js, line 94, character 6:[0m Expected ';' and instead saw '}'.
}
[1;31mpkgcloud/azure/storage/client/files.js, line 111, character 16:[0m Expected '{' and instead saw 'lstream'.
if (lstream) lstream.pipe(rstream);
[1;31mpkgcloud/azure/storage/client/files.js, line 111, character 16:[0m Expected 'lstream' at column 3, not column 16.
if (lstream) lstream.pipe(rstream);
[1;31mpkgcloud/azure/storage/client/files.js, line 117, character 33:[0m Expected 'String' and instead saw ''''.
return "block" + ((1e15 + a + "").slice(-b));
[1;31mpkgcloud/azure/storage/client/files.js, line 148, character 9:[0m Combine this with the previous 'var' statement.
var rstream = self.upload(options, next);
[1;31mpkgcloud/azure/storage/client/files.js, line 162, character 7:[0m Expected 'body' at column 5, not column 7.
body,
[1;31mpkgcloud/azure/storage/client/files.js, line 163, character 7:[0m Expected 'path' at column 5, not column 7.
path,
[1;31mpkgcloud/azure/storage/client/files.js, line 164, character 7:[0m Expected 'qs' at column 5, not column 7.
qs;
[1;31mpkgcloud/azure/storage/client/files.js, line 190, character 8:[0m Move 'var' declarations to the top of the function.
for (var i = 0; i < numBlocks; i++) {
[1;31mpkgcloud/azure/storage/client/files.js, line 190, character 8:[0m Stopping.  (64% scanned).

[1;31mpkgcloud/azure/storage/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/azure/storage/client/index.js, line 10, character 5:[0m Expected 'auth' at column 3, not column 5.
auth = require('../../../common/auth'),
[1;31mpkgcloud/azure/storage/client/index.js, line 11, character 5:[0m Expected 'azureApi' at column 3, not column 5.
azureApi = require('../../utils/azureApi.js'),
[1;31mpkgcloud/azure/storage/client/index.js, line 12, character 5:[0m Expected 'xml2JSON' at column 3, not column 5.
xml2JSON = require('../../utils/xml2json.js').xml2JSON,
[1;31mpkgcloud/azure/storage/client/index.js, line 13, character 5:[0m Expected 'azure' at column 3, not column 5.
azure = require('../../client');
[1;31mpkgcloud/azure/utils/azureApi.js, line 66, character 7:[0m 'validateCreateOptions' was used before it was defined.
validateCreateOptions(options, client.config, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 69, character 7:[0m 'getHostedServiceProperties' was used before it was defined.
getHostedServiceProperties(client, options.name, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 75, character 9:[0m 'createHostedService' was used before it was defined.
createHostedService(client, options, function (err, service) {
[1;31mpkgcloud/azure/utils/azureApi.js, line 89, character 7:[0m 'getOSImage' was used before it was defined.
getOSImage(client, options.image, function (err, res) {
[1;31mpkgcloud/azure/utils/azureApi.js, line 108, character 106:[0m Line too long.
addCertificate(client, options.name, vmOptions.sshCertInfo.cert, ssh.pemPassword, function (err) {
[1;31mpkgcloud/azure/utils/azureApi.js, line 108, character 9:[0m 'addCertificate' was used before it was defined.
addCertificate(client, options.name, vmOptions.sshCertInfo.cert, ssh.pemPassword, function (err) {
[1;31mpkgcloud/azure/utils/azureApi.js, line 117, character 7:[0m 'createVM' was used before it was defined.
createVM(client, options, vmOptions, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 121, character 7:[0m 'getServer' was used before it was defined.
getServer(client, options.name, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 131, character 3:[0m Expected ')' at column 5, not column 3.
);
[1;31mpkgcloud/azure/utils/azureApi.js, line 137, character 5:[0m Expected 'case' at column 3, not column 5.
case 'linux':
[1;31mpkgcloud/azure/utils/azureApi.js, line 138, character 7:[0m Expected 'createLinuxVM' at column 5, not column 7.
createLinuxVM(client, options, vmOptions, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 138, character 7:[0m 'createLinuxVM' was used before it was defined.
createLinuxVM(client, options, vmOptions, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 139, character 7:[0m Expected 'break' at column 5, not column 7.
break;
[1;31mpkgcloud/azure/utils/azureApi.js, line 140, character 5:[0m Expected 'case' at column 3, not column 5.
case 'windows':
[1;31mpkgcloud/azure/utils/azureApi.js, line 141, character 7:[0m Expected 'createWindowsVM' at column 5, not column 7.
createWindowsVM(client, options, vmOptions, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 141, character 7:[0m 'createWindowsVM' was used before it was defined.
createWindowsVM(client, options, vmOptions, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 142, character 7:[0m Expected 'break' at column 5, not column 7.
break;
[1;31mpkgcloud/azure/utils/azureApi.js, line 143, character 5:[0m Expected 'default' at column 3, not column 5.
default:
[1;31mpkgcloud/azure/utils/azureApi.js, line 144, character 7:[0m Expected 'callback' at column 5, not column 7.
callback(errs.create({message: 'Unknown Image OS: ' + vmOptions.image.OS}));
[1;31mpkgcloud/azure/utils/azureApi.js, line 145, character 7:[0m Expected 'break' at column 5, not column 7.
break;
[1;31mpkgcloud/azure/utils/azureApi.js, line 165, character 7:[0m Combine this with the previous 'var' statement.
var mediaLink = getMediaLinkUrl(client.config.storageAccount, options.name + '.vhd');
[1;31mpkgcloud/azure/utils/azureApi.js, line 166, character 7:[0m Combine this with the previous 'var' statement.
var label = new Buffer(options.name).toString('base64');
[1;31mpkgcloud/azure/utils/azureApi.js, line 168, character 7:[0m Combine this with the previous 'var' statement.
var configParams = {
[1;31mpkgcloud/azure/utils/azureApi.js, line 182, character 3:[0m 'makeTemplateRequest' was used before it was defined.
makeTemplateRequest(client, path, 'linuxDeployment.xml', configParams, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 187, character 7:[0m Combine this with the previous 'var' statement.
var mediaLink = getMediaLinkUrl(client.config.storageAccount, options.name + '.vhd');
[1;31mpkgcloud/azure/utils/azureApi.js, line 188, character 7:[0m Combine this with the previous 'var' statement.
var label = new Buffer(options.name).toString('base64');
[1;31mpkgcloud/azure/utils/azureApi.js, line 190, character 7:[0m Combine this with the previous 'var' statement.
var configParams = {
[1;31mpkgcloud/azure/utils/azureApi.js, line 201, character 3:[0m 'makeTemplateRequest' was used before it was defined.
makeTemplateRequest(client, path, 'windowsDeployment.xml', configParams, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 205, character 128:[0m Line too long.
// <subscription-id>/services/hostedservices/<service-name>/deployments/<deployment-name>/roleinstances/<role-name>/operations
[1;31mpkgcloud/azure/utils/azureApi.js, line 211, character 7:[0m Combine this with the previous 'var' statement.
var configParams = {
[1;31mpkgcloud/azure/utils/azureApi.js, line 215, character 3:[0m 'makeTemplateRequest' was used before it was defined.
makeTemplateRequest(client, path, 'captureRole.xml', configParams, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 222, character 7:[0m Combine this with the previous 'var' statement.
var configParams = {
[1;31mpkgcloud/azure/utils/azureApi.js, line 226, character 3:[0m 'makeTemplateRequest' was used before it was defined.
makeTemplateRequest(client, path, 'deleteImage.xml', configParams, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 251, character 3:[0m 'getServersFromService' was used before it was defined.
getServersFromService(client, serverName, function (err, servers) {
[1;31mpkgcloud/azure/utils/azureApi.js, line 253, character 34:[0m Use the || operator.
? callback(err, servers[0] ? servers[0] : null)
[1;31mpkgcloud/azure/utils/azureApi.js, line 263, character 7:[0m 'getHostedServices' was used before it was defined.
getHostedServices(client, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 267, character 7:[0m 'getServersFromServices' was used before it was defined.
getServersFromServices(client, hostedServices, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 272, character 3:[0m Expected ')' at column 5, not column 3.
);
[1;31mpkgcloud/azure/utils/azureApi.js, line 289, character 15:[0m ['accept'] is better written in dot notation.
headers['accept'] = 'application/xml';
[1;31mpkgcloud/azure/utils/azureApi.js, line 300, character 9:[0m 'pollRequestStatus' was used before it was defined.
pollRequestStatus(client, res.headers['x-ms-request-id'], MINIMUM_POLL_INTERVAL, next);
[1;31mpkgcloud/azure/utils/azureApi.js, line 306, character 3:[0m Expected ')' at column 5, not column 3.
);
[1;31mpkgcloud/azure/utils/azureApi.js, line 311, character 7:[0m Combine this with the previous 'var' statement.
var params = {
[1;31mpkgcloud/azure/utils/azureApi.js, line 323, character 167:[0m Line too long.
* POST https://management.core.windows.net/<subscription-id>/services/hostedservices/<service-name>/deployments/<deployment-name>/roleinstances/<role-name>/operations
[1;31mpkgcloud/azure/utils/azureApi.js, line 338, character 167:[0m Line too long.
* POST https://management.core.windows.net/<subscription-id>/services/hostedservices/<service-name>/deployments/<deployment-name>/roleinstances/<role-name>/operations
[1;31mpkgcloud/azure/utils/azureApi.js, line 354, character 7:[0m Combine this with the previous 'var' statement.
var params = {
[1;31mpkgcloud/azure/utils/azureApi.js, line 363, character 104:[0m Line too long.
// DELETE https://management.core.windows.net/<subscription-id>/services/hostedservices/<service-name>
[1;31mpkgcloud/azure/utils/azureApi.js, line 374, character 5:[0m 'pollRequestStatus' was used before it was defined.
pollRequestStatus(client, res.headers['x-ms-request-id'], MINIMUM_POLL_INTERVAL, callback);
[1;31mpkgcloud/azure/utils/azureApi.js, line 404, character 132:[0m Line too long.
* DELETE https://management.core.windows.net/<subscription-id>/services/hostedservices/<service-name>/deployments/<deployment-name>
[1;31mpkgcloud/azure/utils/azureApi.js, line 405, character 104:[0m Line too long.
*   Because Delete Deployment is an asynchronous operation, it always returns status code 202 (Accept).
[1;31mpkgcloud/azure/utils/azureApi.js, line 407, character 102:[0m Line too long.
* Because Delete Deployment is an asynchronous operation, it always returns status code 202 (Accept).
[1;31mpkgcloud/azure/utils/azureApi.js, line 407, character 102:[0m Too many errors. (58% scanned).

[1;31mpkgcloud/azure/utils/cert.js, line 74, character 7:[0m Combine this with the previous 'var' statement.
var endCert = '\n' + pem.indexOf(END_CERT);
[1;31mpkgcloud/azure/utils/cert.js, line 79, character 7:[0m Combine this with the previous 'var' statement.
var certBase64 = pem.substring(beginCert, endCert);
[1;31mpkgcloud/azure/utils/cert.js, line 82, character 7:[0m Combine this with the previous 'var' statement.
var cert = new Buffer(certBase64, 'base64');
[1;31mpkgcloud/azure/utils/cert.js, line 83, character 7:[0m Combine this with the previous 'var' statement.
var sha1 = crypto.createHash('sha1');
[1;31mpkgcloud/azure/utils/constants.js, line 1, character 0:[0m Unsafe character.
/**
[1;31mpkgcloud/azure/utils/constants.js, line 17, character 1:[0m Read only.
exports = module.exports;
[1;31mpkgcloud/azure/utils/hmacsha256sign.js, line 1, character 0:[0m Unsafe character.
/**
[1;31mpkgcloud/azure/utils/hmacsha256sign.js, line 20, character 1:[0m Read only.
exports = module.exports = HmacSha256Sign;
[1;31mpkgcloud/azure/utils/hmacsha256sign.js, line 20, character 28:[0m 'HmacSha256Sign' was used before it was defined.
exports = module.exports = HmacSha256Sign;
[1;31mpkgcloud/azure/utils/sharedkey.js, line 1, character 0:[0m Unsafe character.
/**
[1;31mpkgcloud/azure/utils/sharedkey.js, line 27, character 1:[0m Expected 'exports' at column 3, not column 1.
exports = module.exports = SharedKey;
[1;31mpkgcloud/azure/utils/sharedkey.js, line 27, character 28:[0m 'SharedKey' was used before it was defined.
exports = module.exports = SharedKey;
[1;31mpkgcloud/azure/utils/sharedkey.js, line 66, character 7:[0m Combine this with the previous 'var' statement.
var stringToSign =
[1;31mpkgcloud/azure/utils/sharedkey.js, line 68, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_ENCODING]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 69, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_LANGUAGE]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 70, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_LENGTH]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 71, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_MD5]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 72, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_TYPE]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 73, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.DATE]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 74, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.IF_MODIFIED_SINCE]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 75, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.IF_MATCH]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 76, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.IF_NONE_MATCH]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 77, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.IF_UNMODIFIED_SINCE]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 78, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.RANGE]) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 79, character 7:[0m Expected 'this' at column 5, not column 7.
this._getCanonicalizedHeaders(req) +
[1;31mpkgcloud/azure/utils/sharedkey.js, line 80, character 7:[0m Expected 'this' at column 5, not column 7.
this._getCanonicalizedResource(req);
[1;31mpkgcloud/azure/utils/sharedkey.js, line 82, character 7:[0m Combine this with the previous 'var' statement.
var signature = this.signer.sign(stringToSign);
[1;31mpkgcloud/azure/utils/sharedkey.js, line 98, character 7:[0m Combine this with the previous 'var' statement.
var canonicalizedResource = '/' + this.storageAccount;
[1;31mpkgcloud/azure/utils/sharedkey.js, line 107, character 9:[0m Combine this with the previous 'var' statement.
var queryStringValues = req.qs;
[1;31mpkgcloud/azure/utils/sharedkey.js, line 111, character 11:[0m Combine this with the previous 'var' statement.
var paramNames = [];
[1;31mpkgcloud/azure/utils/sharedkey.js, line 112, character 12:[0m Move 'var' declarations to the top of the function.
for (var n in queryStringValues) {
[1;31mpkgcloud/azure/utils/sharedkey.js, line 112, character 12:[0m Stopping.  (69% scanned).

[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 18, character 5:[0m Expected 'HeaderConstants' at column 3, not column 5.
HeaderConstants = require('./constants').HeaderConstants,
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 19, character 5:[0m Expected 'azureApi' at column 3, not column 5.
azureApi = require('../utils/azureApi'),
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 20, character 5:[0m Expected 'URL' at column 3, not column 5.
URL = require('url');
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 23, character 1:[0m Read only.
exports = module.exports = SharedKeyTable;
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 23, character 28:[0m 'SharedKeyTable' was used before it was defined.
exports = module.exports = SharedKeyTable;
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 56, character 15:[0m ['accept'] is better written in dot notation.
req.headers['accept'] = 'application/atom+xml;charset="utf-8"';
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 62, character 7:[0m Combine this with the previous 'var' statement.
var stringToSign =
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 64, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_MD5]) +
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 65, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.CONTENT_TYPE]) +
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 66, character 7:[0m Expected 'getvalueToAppend' at column 5, not column 7.
getvalueToAppend(req.headers[HeaderConstants.DATE_HEADER]) +
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 67, character 7:[0m Expected 'this' at column 5, not column 7.
this._getCanonicalizedResource(req);
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 69, character 15:[0m ['DataServiceVersion'] is better written in dot notation.
req.headers['DataServiceVersion'] = '1.0;NetFx';
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 70, character 15:[0m ['MaxDataServiceVersion'] is better written in dot notation.
req.headers['MaxDataServiceVersion'] = '2.0;NetFx';
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 87, character 7:[0m Combine this with the previous 'var' statement.
var canonicalizedResource = '/' + this.storageAccount;
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 94, character 9:[0m Combine this with the previous 'var' statement.
var u = URL.parse(req.path[1], true);
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 95, character 9:[0m Combine this with the previous 'var' statement.
var queryStringValues = u.query;
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 98, character 29:[0m ['comp'] is better written in dot notation.
if (queryStringValues['comp']) {
[1;31mpkgcloud/azure/utils/sharedkeytable.js, line 99, character 63:[0m ['comp'] is better written in dot notation.
canonicalizedResource += '?comp=' + queryStringValues['comp'];
[1;31mpkgcloud/azure/utils/xml2json.js, line 28, character 7:[0m Combine this with the previous 'var' statement.
var parser = new xml2js.Parser({normalize: false, trim: false});
[1;31mpkgcloud/common/auth.js, line 9, character 5:[0m Expected 'awsSignature' at column 3, not column 5.
awsSignature = require('./aws-signature'),
[1;31mpkgcloud/common/auth.js, line 10, character 5:[0m Expected 'azureSignature' at column 3, not column 5.
azureSignature = require('./azure-signature'),
[1;31mpkgcloud/common/auth.js, line 11, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/common/aws-signature.js, line 9, character 5:[0m Expected 'qs' at column 3, not column 5.
qs = require('querystring'),
[1;31mpkgcloud/common/aws-signature.js, line 10, character 5:[0m Expected 'crypto' at column 3, not column 5.
crypto = require('crypto');
[1;31mpkgcloud/common/aws-signature.js, line 13, character 17:[0m Expected '{' and instead saw 'options'.
if (!options) options = {};
[1;31mpkgcloud/common/aws-signature.js, line 13, character 17:[0m Expected 'options' at column 3, not column 17.
if (!options) options = {};
[1;31mpkgcloud/common/aws-signature.js, line 24, character 9:[0m Expected 'req' at column 7, not column 9.
req.method, '\n',
[1;31mpkgcloud/common/aws-signature.js, line 25, character 9:[0m Expected 'this' at column 7, not column 9.
this.serversUrl, '\n',
[1;31mpkgcloud/common/aws-signature.js, line 26, character 9:[0m Expected '/' at column 7, not column 9.
'/', '\n'
[1;31mpkgcloud/common/aws-signature.js, line 27, character 7:[0m Expected ']' at column 5, not column 7.
],
[1;31mpkgcloud/common/aws-signature.js, line 28, character 7:[0m Expected 'query' at column 5, not column 7.
query = req.body;
[1;31mpkgcloud/common/aws-signature.js, line 34, character 40:[0m Missing '()'.
query.Timestamp = new Date(+new Date + 36e5 * 30).toISOString();
[1;31mpkgcloud/common/aws-signature.js, line 37, character 18:[0m Expected '{' and instead saw 'signatureString'.
if (i !== 0) signatureString.push('&');
[1;31mpkgcloud/common/aws-signature.js, line 37, character 18:[0m Expected 'signatureString' at column 5, not column 18.
if (i !== 0) signatureString.push('&');
[1;31mpkgcloud/common/aws-signature.js, line 41, character 7:[0m Combine this with the previous 'var' statement.
var toSign = signatureString.join('');
[1;31mpkgcloud/common/aws-signature.js, line 51, character 7:[0m Expected 'sha256' at column 5, not column 7.
'sha256',
[1;31mpkgcloud/common/aws-signature.js, line 52, character 7:[0m Expected 'options' at column 5, not column 7.
options.key
[1;31mpkgcloud/common/aws-signature.js, line 58, character 3:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/common/aws-signature.js, line 58, character 3:[0m Expected 'else' at column 5, not column 3.
else {
[1;31mpkgcloud/common/aws-signature.js, line 59, character 5:[0m Expected 'req' at column 7, not column 5.
req.qs = {
[1;31mpkgcloud/common/aws-signature.js, line 60, character 7:[0m Expected 'Action' at column 9, not column 7.
Action: query.Action
[1;31mpkgcloud/common/aws-signature.js, line 61, character 5:[0m Expected '}' at column 7, not column 5.
};
[1;31mpkgcloud/common/aws-signature.js, line 62, character 3:[0m Expected '}' at column 5, not column 3.
}
[1;31mpkgcloud/common/aws-signature.js, line 75, character 17:[0m Expected '{' and instead saw 'options'.
if (!options) options = {};
[1;31mpkgcloud/common/aws-signature.js, line 75, character 17:[0m Expected 'options' at column 3, not column 17.
if (!options) options = {};
[1;31mpkgcloud/common/aws-signature.js, line 93, character 7:[0m Combine this with the previous 'var' statement.
var now = new Date(),
[1;31mpkgcloud/common/aws-signature.js, line 94, character 7:[0m Expected 'signatureString' at column 5, not column 7.
signatureString = [
[1;31mpkgcloud/common/aws-signature.js, line 95, character 9:[0m Expected 'req' at column 7, not column 9.
req.method || 'GET', '\n',
[1;31mpkgcloud/common/aws-signature.js, line 96, character 9:[0m Expected 'headers' at column 7, not column 9.
headers['content-md5'] || '', '\n',
[1;31mpkgcloud/common/aws-signature.js, line 97, character 9:[0m Expected 'headers' at column 7, not column 9.
headers['content-type'] || '', '\n',
[1;31mpkgcloud/common/aws-signature.js, line 98, character 9:[0m Expected 'now' at column 7, not column 9.
now.toUTCString(), '\n'
[1;31mpkgcloud/common/aws-signature.js, line 99, character 7:[0m Expected ']' at column 5, not column 7.
];
[1;31mpkgcloud/common/aws-signature.js, line 111, character 3:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/common/aws-signature.js, line 111, character 3:[0m Expected 'else' at column 5, not column 3.
else {
[1;31mpkgcloud/common/aws-signature.js, line 112, character 5:[0m Expected 'signatureString' at column 7, not column 5.
signatureString.push(req.path);
[1;31mpkgcloud/common/aws-signature.js, line 113, character 3:[0m Expected '}' at column 5, not column 3.
}
[1;31mpkgcloud/common/aws-signature.js, line 115, character 7:[0m Combine this with the previous 'var' statement.
var signature = crypto.createHmac(
[1;31mpkgcloud/common/aws-signature.js, line 118, character 3:[0m Expected ')' at column 5, not column 3.
).update(signatureString.join('')).digest('base64');
[1;31mpkgcloud/common/azure-signature.js, line 36, character 15:[0m ['accept'] is better written in dot notation.
req.headers['accept'] = 'application/xml';
[1;31mpkgcloud/common/http-signature.js, line 12, character 5:[0m Expected 'crypto' at column 3, not column 5.
crypto = require('crypto'),
[1;31mpkgcloud/common/http-signature.js, line 13, character 5:[0m Expected 'http' at column 3, not column 5.
http = require('http');
[1;31mpkgcloud/common/http-signature.js, line 60, character 7:[0m Expected 'months' at column 5, not column 7.
months,
[1;31mpkgcloud/common/http-signature.js, line 61, character 7:[0m Expected 'days' at column 5, not column 7.
days;
[1;31mpkgcloud/common/http-signature.js, line 107, character 9:[0m Expected 'alg' at column 7, not column 9.
alg = options.algorithm.match(/(hmac|rsa)-(\w+)/),
[1;31mpkgcloud/common/http-signature.js, line 108, character 9:[0m Expected 'signature' at column 7, not column 9.
signature,
[1;31mpkgcloud/common/http-signature.js, line 109, character 9:[0m Expected 'signer' at column 7, not column 9.
signer,
[1;31mpkgcloud/common/http-signature.js, line 110, character 9:[0m Expected 'hmac' at column 7, not column 9.
hmac;
[1;31mpkgcloud/core/base/client.js, line 9, character 5:[0m Expected 'events' at column 3, not column 5.
events = require('eventemitter2'),
[1;31mpkgcloud/core/base/client.js, line 10, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/core/base/client.js, line 11, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/core/base/client.js, line 12, character 5:[0m Expected 'qs' at column 3, not column 5.
qs = require('qs'),
[1;31mpkgcloud/core/base/client.js, line 13, character 5:[0m Expected 'common' at column 3, not column 5.
common = require('../../common'),
[1;31mpkgcloud/core/base/client.js, line 14, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../pkgcloud'),
[1;31mpkgcloud/core/base/client.js, line 15, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs');
[1;31mpkgcloud/core/base/client.js, line 45, character 7:[0m Combine this with the previous 'var' statement.
var requestOptions = {};
[1;31mpkgcloud/core/base/client.js, line 73, character 44:[0m Missing space between '===' and 'GET'.
if (options.network && options.method ==='GET') {
[1;31mpkgcloud/core/base/client.js, line 85, character 12:[0m Move 'var' declarations to the top of the function.
for (var i = 0; i < self.before.length; i++) {
[1;31mpkgcloud/core/base/client.js, line 85, character 12:[0m Stopping.  (43% scanned).

[1;31mpkgcloud/core/base/model.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/core/base/model.js, line 44, character 7:[0m Expected 'start' at column 5, not column 7.
start = Date.now(),
[1;31mpkgcloud/core/base/model.js, line 45, character 7:[0m Expected 'fired' at column 5, not column 7.
fired = false,
[1;31mpkgcloud/core/base/model.js, line 46, character 7:[0m Expected 'equalCheckId' at column 5, not column 7.
equalCheckId,
[1;31mpkgcloud/core/base/model.js, line 47, character 7:[0m Expected 'current' at column 5, not column 7.
current;
[1;31mpkgcloud/core/base/model.js, line 69, character 11:[0m Expected 'keys' at column 9, not column 11.
keys  = Object.keys(attributes);
[1;31mpkgcloud/core/base/model.js, line 74, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/core/base/model.js, line 74, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/core/base/model.js, line 75, character 9:[0m Expected 'for' at column 11, not column 9.
for (var i = 0; i < keys.length; i++) {
[1;31mpkgcloud/core/base/model.js, line 75, character 14:[0m Move 'var' declarations to the top of the function.
for (var i = 0; i < keys.length; i++) {
[1;31mpkgcloud/core/base/model.js, line 75, character 14:[0m Stopping.  (75% scanned).

[1;31mpkgcloud/core/compute/flavor.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/compute/image.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/compute/index.js, line 34, character 5:[0m Unexpected 'else' after 'return'.
return server.adminPass;
[1;31mpkgcloud/core/compute/index.js, line 36, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (server.metadata) {
[1;31mpkgcloud/core/compute/index.js, line 36, character 3:[0m Expected 'else' at column 5, not column 3.
else if (server.metadata) {
[1;31mpkgcloud/core/compute/index.js, line 37, character 28:[0m ['root'] is better written in dot notation.
return server.metadata['root'];
[1;31mpkgcloud/core/compute/index.js, line 57, character 7:[0m Expected 'isPrivate' at column 5, not column 7.
isPrivate = options.isPrivate || exports.isPrivate,
[1;31mpkgcloud/core/compute/index.js, line 58, character 7:[0m Expected 'interfaces' at column 5, not column 7.
interfaces,
[1;31mpkgcloud/core/compute/index.js, line 59, character 7:[0m Expected 'addresses' at column 5, not column 7.
addresses,
[1;31mpkgcloud/core/compute/index.js, line 60, character 7:[0m Expected 'networks' at column 5, not column 7.
networks,
[1;31mpkgcloud/core/compute/index.js, line 61, character 7:[0m Expected 'pub' at column 5, not column 7.
pub;
[1;31mpkgcloud/core/compute/index.js, line 74, character 5:[0m Unexpected 'else' after 'return'.
return !pub.length
[1;31mpkgcloud/core/compute/index.js, line 78, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (server.addresses.public || server.addresses.private) {
[1;31mpkgcloud/core/compute/index.js, line 78, character 3:[0m Expected 'else' at column 5, not column 3.
else if (server.addresses.public || server.addresses.private) {
[1;31mpkgcloud/core/compute/index.js, line 78, character 29:[0m Expected an identifier and instead saw 'public' (a reserved word).
else if (server.addresses.public || server.addresses.private) {
[1;31mpkgcloud/core/compute/index.js, line 78, character 56:[0m Expected an identifier and instead saw 'private' (a reserved word).
else if (server.addresses.public || server.addresses.private) {
[1;31mpkgcloud/core/compute/index.js, line 94, character 29:[0m Expected an identifier and instead saw 'public' (a reserved word).
return server.addresses.public.length
[1;31mpkgcloud/core/compute/index.js, line 95, character 26:[0m Expected an identifier and instead saw 'public' (a reserved word).
? server.addresses.public[0]
[1;31mpkgcloud/core/compute/index.js, line 96, character 26:[0m Expected an identifier and instead saw 'private' (a reserved word).
: server.addresses.private[0];
[1;31mpkgcloud/core/compute/index.js, line 94, character 5:[0m Unexpected 'else' after 'return'.
return server.addresses.public.length
[1;31mpkgcloud/core/compute/index.js, line 98, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (server.addresses) {
[1;31mpkgcloud/core/compute/index.js, line 98, character 3:[0m Expected 'else' at column 5, not column 3.
else if (server.addresses) {
[1;31mpkgcloud/core/compute/index.js, line 116, character 48:[0m Expected ';' and instead saw '}'.
.map(function (info) { return info.addr })
[1;31mpkgcloud/core/compute/index.js, line 122, character 11:[0m Expected exactly one space between '}' and 'else'.
else if (isPrivate(addr)) {
[1;31mpkgcloud/core/compute/index.js, line 122, character 11:[0m Expected 'else' at column 13, not column 11.
else if (isPrivate(addr)) {
[1;31mpkgcloud/core/compute/index.js, line 128, character 10:[0m Expected an identifier and instead saw 'public' (a reserved word).
}, { public: [], private: [] });
[1;31mpkgcloud/core/compute/index.js, line 128, character 22:[0m Expected an identifier and instead saw 'private' (a reserved word).
}, { public: [], private: [] });
[1;31mpkgcloud/core/compute/server.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model'),
[1;31mpkgcloud/core/compute/server.js, line 10, character 5:[0m Expected 'computeStatus' at column 3, not column 5.
computeStatus = require('../../common/status').compute;
[1;31mpkgcloud/core/compute/server.js, line 21, character 15:[0m Expected '{' and instead saw 'self'.
if (!err) self._setProperties(server.original);
[1;31mpkgcloud/core/compute/server.js, line 21, character 15:[0m Expected 'self' at column 5, not column 15.
if (!err) self._setProperties(server.original);
[1;31mpkgcloud/core/dns/record.js, line 11, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/dns/record.js, line 19, character 35:[0m Expected exactly one space between 'function' and '('.
Record.prototype.create = function(callback) {
[1;31mpkgcloud/core/dns/record.js, line 23, character 32:[0m Expected exactly one space between 'function' and '('.
Record.prototype.get = function(callback) {
[1;31mpkgcloud/core/dns/record.js, line 27, character 35:[0m Expected exactly one space between 'function' and '('.
Record.prototype.update = function(callback) {
[1;31mpkgcloud/core/dns/record.js, line 31, character 36:[0m Expected exactly one space between 'function' and '('.
Record.prototype.destroy = function(callback) {
[1;31mpkgcloud/core/dns/zone.js, line 11, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/loadbalancer/loadbalancer.js, line 11, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/loadbalancer/node.js, line 11, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/network/network.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/network/port.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/network/subnet.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/storage/container.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model');
[1;31mpkgcloud/core/storage/file.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/core/storage/file.js, line 10, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../base/model'),
[1;31mpkgcloud/core/storage/file.js, line 11, character 5:[0m Expected 'storage' at column 3, not column 5.
storage = require('../storage');
[1;31mpkgcloud/digitalocean/client.js, line 9, character 5:[0m Expected 'fs' at column 3, not column 5.
fs    = require('fs'),
[1;31mpkgcloud/digitalocean/client.js, line 10, character 5:[0m Expected 'auth' at column 3, not column 5.
auth  = require('../common/auth'),
[1;31mpkgcloud/digitalocean/client.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../core/base');
[1;31mpkgcloud/digitalocean/client.js, line 30, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/digitalocean/compute/flavor.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/flavor');
[1;31mpkgcloud/digitalocean/compute/flavor.js, line 22, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/digitalocean/compute/image.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/image');
[1;31mpkgcloud/digitalocean/compute/server.js, line 9, character 5:[0m Expected 'compute' at column 3, not column 5.
compute = require('../../core/compute'),
[1;31mpkgcloud/digitalocean/compute/server.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base    = require('../../core/compute/server');
[1;31mpkgcloud/digitalocean/compute/server.js, line 24, character 5:[0m Expected an identifier and instead saw 'public' (a reserved word).
public: [details.ip_address],
[1;31mpkgcloud/digitalocean/compute/server.js, line 25, character 5:[0m Expected an identifier and instead saw 'private' (a reserved word).
private: []
[1;31mpkgcloud/digitalocean/compute/server.js, line 29, character 5:[0m Expected 'case' at column 3, not column 5.
case 'ACTIVE':
[1;31mpkgcloud/digitalocean/compute/server.js, line 30, character 7:[0m Expected 'this' at column 5, not column 7.
this.status = "RUNNING";
[1;31mpkgcloud/digitalocean/compute/server.js, line 31, character 7:[0m Expected 'break' at column 5, not column 7.
break;
[1;31mpkgcloud/digitalocean/compute/server.js, line 32, character 5:[0m Expected 'case' at column 3, not column 5.
case 'NEW':
[1;31mpkgcloud/digitalocean/compute/server.js, line 33, character 5:[0m Empty case.
default:
[1;31mpkgcloud/digitalocean/compute/server.js, line 33, character 5:[0m Expected 'default' at column 3, not column 5.
default:
[1;31mpkgcloud/digitalocean/compute/server.js, line 34, character 7:[0m Expected 'this' at column 5, not column 7.
this.status = 'PROVISIONING';
[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.digitalocean.compute;
[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 27, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 30, character 14:[0m Unexpected '(space)'.
}), res);
[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 45, character 7:[0m Expected 'self' at column 5, not column 7.
self     = this;
[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 55, character 24:[0m Expected '===' and instead saw '=='.
return flavor.id == flavorId;
[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 57, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/digitalocean/compute/client/flavors.js, line 60, character 28:[0m 'Flavor' was used before it was defined.
: callback(null, new Flavor(self, flavor));
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 9, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.digitalocean.compute;
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 44, character 7:[0m Expected 'self' at column 5, not column 7.
self    = this;
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 44, character 22:[0m Unexpected '(space)'.
self    = this;
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 82, character 7:[0m Expected 'self' at column 5, not column 7.
self    = this;
[1;31mpkgcloud/digitalocean/compute/client/images.js, line 82, character 22:[0m Unexpected '(space)'.
self    = this;
[1;31mpkgcloud/digitalocean/compute/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin      = require('url-join'),
[1;31mpkgcloud/digitalocean/compute/client/index.js, line 10, character 5:[0m Expected 'digitalocean' at column 3, not column 5.
digitalocean = require('../../client');
[1;31mpkgcloud/digitalocean/compute/client/keys.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/digitalocean/compute/client/keys.js, line 83, character 43:[0m Unexpected ','.
path: '/ssh_keys/' + name + '/destroy',
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 9, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 10, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 11, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.digitalocean.compute;
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 97, character 7:[0m Expected 'createOptions' at column 5, not column 7.
createOptions = {
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 98, character 9:[0m Expected 'path' at column 7, not column 9.
path: '/droplets/new',
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 99, character 9:[0m Expected 'qs' at column 7, not column 9.
qs: {}
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 100, character 7:[0m Expected '}' at column 5, not column 7.
};
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 128, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (options.keynames) {
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 128, character 3:[0m Expected 'else' at column 5, not column 3.
else if (options.keynames) {
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 154, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/digitalocean/compute/client/servers.js, line 182, character 7:[0m Expected 'self' at column 5, not column 7.
self     = this;
[1;31mpkgcloud/iriscouch/database/client/index.js, line 9, character 5:[0m Expected 'request' at column 3, not column 5.
request   = require('request'),
[1;31mpkgcloud/iriscouch/database/client/index.js, line 10, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud  = require('../../../../pkgcloud'),
[1;31mpkgcloud/iriscouch/database/client/index.js, line 11, character 5:[0m Expected 'errs' at column 3, not column 5.
errs      = require('errs');
[1;31mpkgcloud/iriscouch/database/client/index.js, line 29, character 14:[0m ['first_name'] is better written in dot notation.
if (!attrs['first_name'] || !attrs['last_name']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 29, character 38:[0m ['last_name'] is better written in dot notation.
if (!attrs['first_name'] || !attrs['last_name']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 35, character 14:[0m ['subdomain'] is better written in dot notation.
if (!attrs['subdomain'] || !attrs['email']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 35, character 37:[0m ['email'] is better written in dot notation.
if (!attrs['subdomain'] || !attrs['email']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 42, character 13:[0m ['type'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis' && !attrs['password']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 42, character 30:[0m ['type'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis' && !attrs['password']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 42, character 60:[0m ['password'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis' && !attrs['password']) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 51, character 20:[0m ['type'] is better written in dot notation.
_id: ((attrs['type'] &&
[1;31mpkgcloud/iriscouch/database/client/index.js, line 52, character 15:[0m ['type'] is better written in dot notation.
attrs['type'] === 'redis') ? "Redis/" : "Server/") + attrs.subdomain,
[1;31mpkgcloud/iriscouch/database/client/index.js, line 60, character 3:[0m Expected '}' at column 5, not column 3.
};
[1;31mpkgcloud/iriscouch/database/client/index.js, line 63, character 13:[0m ['type'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis') {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 63, character 30:[0m ['type'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis') {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 64, character 37:[0m ['password'] is better written in dot notation.
couch.creation.password = attrs['password'];
[1;31mpkgcloud/iriscouch/database/client/index.js, line 64, character 29:[0m Weird assignment.
couch.creation.password = attrs['password'];
[1;31mpkgcloud/iriscouch/database/client/index.js, line 67, character 7:[0m Combine this with the previous 'var' statement.
var options = {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 85, character 36:[0m Expected ';' and instead saw '}'.
try { body = JSON.parse(body) }
[1;31mpkgcloud/iriscouch/database/client/index.js, line 86, character 7:[0m Expected exactly one space between '}' and 'catch'.
catch (ex) { }
[1;31mpkgcloud/iriscouch/database/client/index.js, line 86, character 7:[0m Expected 'catch' at column 9, not column 7.
catch (ex) { }
[1;31mpkgcloud/iriscouch/database/client/index.js, line 92, character 111:[0m Line too long.
// For Redis we dont have any polling method yet, so just trust on iriscouch for provisioning correctly
[1;31mpkgcloud/iriscouch/database/client/index.js, line 94, character 19:[0m ['type'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis') {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 94, character 36:[0m ['type'] is better written in dot notation.
if (attrs['type'] && attrs['type'] === 'redis') {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 102, character 65:[0m ['password'] is better written in dot notation.
password: subdomain + '.redis.irstack.com:' + attrs['password']
[1;31mpkgcloud/iriscouch/database/client/index.js, line 115, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 115, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 116, character 9:[0m Expected 'callback' at column 11, not column 9.
callback("There was an issue creating the couch", { "created": false });
[1;31mpkgcloud/iriscouch/database/client/index.js, line 117, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/iriscouch/database/client/index.js, line 119, character 105:[0m Line too long.
else if (response.statusCode === 403 || response.statusCode === 401 || response.statusCode === 302) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 119, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (response.statusCode === 403 || response.statusCode === 401 || response.statusCode === 302) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 119, character 5:[0m Expected 'else' at column 7, not column 5.
else if (response.statusCode === 403 || response.statusCode === 401 || response.statusCode === 302) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 122, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (response.statusCode === 409) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 122, character 5:[0m Expected 'else' at column 7, not column 5.
else if (response.statusCode === 409) {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 125, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 125, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 126, character 7:[0m Expected 'callback' at column 9, not column 7.
callback("unknown error", { "created": false });
[1;31mpkgcloud/iriscouch/database/client/index.js, line 127, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/iriscouch/database/client/index.js, line 154, character 7:[0m Expected 'maxAttempts' at column 5, not column 7.
maxAttempts = 20,
[1;31mpkgcloud/iriscouch/database/client/index.js, line 155, character 7:[0m Expected 'count' at column 5, not column 7.
count = 0,
[1;31mpkgcloud/iriscouch/database/client/index.js, line 156, character 7:[0m Expected 'options' at column 5, not column 7.
options = {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 157, character 9:[0m Expected 'uri' at column 7, not column 9.
uri    : this._getCouchPollingUrl(couchName),
[1;31mpkgcloud/iriscouch/database/client/index.js, line 158, character 9:[0m Expected 'method' at column 7, not column 9.
method : 'GET',
[1;31mpkgcloud/iriscouch/database/client/index.js, line 159, character 9:[0m Expected 'followRedirect' at column 7, not column 9.
followRedirect: false,
[1;31mpkgcloud/iriscouch/database/client/index.js, line 160, character 9:[0m Expected 'headers' at column 7, not column 9.
headers: {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 161, character 11:[0m Expected 'Content-Type' at column 9, not column 11.
'Content-Type': 'application/json',
[1;31mpkgcloud/iriscouch/database/client/index.js, line 162, character 11:[0m Expected 'User-Agent' at column 9, not column 11.
'User-Agent': utile.format('nodejs-pkgcloud/%s', pkgcloud.version)
[1;31mpkgcloud/iriscouch/database/client/index.js, line 163, character 9:[0m Expected '}' at column 7, not column 9.
}
[1;31mpkgcloud/iriscouch/database/client/index.js, line 164, character 7:[0m Expected '}' at column 5, not column 7.
},
[1;31mpkgcloud/iriscouch/database/client/index.js, line 166, character 3:[0m Expected 't' at column 5, not column 3.
t = function () {
[1;31mpkgcloud/iriscouch/database/client/index.js, line 166, character 3:[0m Too many errors. (86% scanned).

[1;31mpkgcloud/joyent/client.js, line 9, character 5:[0m Expected 'fs' at column 3, not column 5.
fs    = require('fs'),
[1;31mpkgcloud/joyent/client.js, line 10, character 5:[0m Expected 'auth' at column 3, not column 5.
auth  = require('../common/auth'),
[1;31mpkgcloud/joyent/client.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../core/base');
[1;31mpkgcloud/joyent/compute/flavor.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/flavor');
[1;31mpkgcloud/joyent/compute/image.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/image');
[1;31mpkgcloud/joyent/compute/server.js, line 9, character 5:[0m Expected 'compute' at column 3, not column 5.
compute = require('../../core/compute'),
[1;31mpkgcloud/joyent/compute/server.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base    = require('../../core/compute/server'),
[1;31mpkgcloud/joyent/compute/server.js, line 11, character 5:[0m Expected 'computeStatus' at column 3, not column 5.
computeStatus = require('../../common/status').compute;
[1;31mpkgcloud/joyent/compute/server.js, line 25, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PROVISIONING':
[1;31mpkgcloud/joyent/compute/server.js, line 26, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.provisioning;
[1;31mpkgcloud/joyent/compute/server.js, line 27, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/joyent/compute/server.js, line 28, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RUNNING':
[1;31mpkgcloud/joyent/compute/server.js, line 29, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.running;
[1;31mpkgcloud/joyent/compute/server.js, line 30, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/joyent/compute/server.js, line 31, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPING':
[1;31mpkgcloud/joyent/compute/server.js, line 32, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPED':
[1;31mpkgcloud/joyent/compute/server.js, line 33, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.stopped;
[1;31mpkgcloud/joyent/compute/server.js, line 34, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/joyent/compute/server.js, line 35, character 7:[0m Expected 'default' at column 5, not column 7.
default:
[1;31mpkgcloud/joyent/compute/server.js, line 36, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.unknown;
[1;31mpkgcloud/joyent/compute/server.js, line 37, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/joyent/compute/server.js, line 45, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/joyent/compute/server.js, line 45, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/joyent/compute/server.js, line 46, character 7:[0m Expected 'all' at column 9, not column 7.
all['public'].push(addr);
[1;31mpkgcloud/joyent/compute/server.js, line 47, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/joyent/compute/client/flavors.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/joyent/compute/client/flavors.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.joyent.compute;
[1;31mpkgcloud/joyent/compute/client/flavors.js, line 27, character 11:[0m Expected 'return' at column 9, not column 11.
return new compute.Flavor(self, result);
[1;31mpkgcloud/joyent/compute/client/flavors.js, line 28, character 9:[0m Expected '}' at column 7, not column 9.
}), res);
[1;31mpkgcloud/joyent/compute/client/flavors.js, line 43, character 7:[0m Expected 'flavorId' at column 5, not column 7.
flavorId = flavor instanceof base.Flavor ? flavor.id : flavor;
[1;31mpkgcloud/joyent/compute/client/images.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/joyent/compute/client/images.js, line 9, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/joyent/compute/client/images.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.joyent.compute;
[1;31mpkgcloud/joyent/compute/client/images.js, line 27, character 11:[0m Expected 'return' at column 9, not column 11.
return new compute.Image(self, result);
[1;31mpkgcloud/joyent/compute/client/images.js, line 28, character 9:[0m Expected '}' at column 7, not column 9.
}), res);
[1;31mpkgcloud/joyent/compute/client/images.js, line 42, character 7:[0m Expected 'imageId' at column 5, not column 7.
imageId = image instanceof base.Image ? image.id : image;
[1;31mpkgcloud/joyent/compute/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin   = require('url-join'),
[1;31mpkgcloud/joyent/compute/client/index.js, line 10, character 5:[0m Expected 'joyent' at column 3, not column 5.
joyent    = require('../../client');
[1;31mpkgcloud/joyent/compute/client/keys.js, line 9, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile');
[1;31mpkgcloud/joyent/compute/client/servers.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/joyent/compute/client/servers.js, line 9, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/joyent/compute/client/servers.js, line 10, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/joyent/compute/client/servers.js, line 11, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.joyent.compute;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 23, character 7:[0m Expected 'return' at column 5, not column 7.
return err
[1;31mpkgcloud/joyent/compute/client/servers.js, line 37, character 65:[0m Expected 'callback' at column 5, not column 65.
errs.create({message: "Joyent's API is not rate limited"}), callback);
[1;31mpkgcloud/joyent/compute/client/servers.js, line 37, character 73:[0m Expected ')' at column 3, not column 73.
errs.create({message: "Joyent's API is not rate limited"}), callback);
[1;31mpkgcloud/joyent/compute/client/servers.js, line 66, character 13:[0m Expected 'return' at column 11, not column 13.
return new compute.Server(self, result);
[1;31mpkgcloud/joyent/compute/client/servers.js, line 67, character 11:[0m Expected '}' at column 9, not column 11.
}), res);
[1;31mpkgcloud/joyent/compute/client/servers.js, line 95, character 7:[0m Expected 'createOptions' at column 5, not column 7.
createOptions = {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 96, character 9:[0m Expected 'method' at column 7, not column 9.
method: 'POST',
[1;31mpkgcloud/joyent/compute/client/servers.js, line 97, character 9:[0m Expected 'path' at column 7, not column 9.
path:   this.account + '/machines',
[1;31mpkgcloud/joyent/compute/client/servers.js, line 98, character 9:[0m Expected 'body' at column 7, not column 9.
body:   options
[1;31mpkgcloud/joyent/compute/client/servers.js, line 99, character 7:[0m Expected '}' at column 5, not column 7.
};
[1;31mpkgcloud/joyent/compute/client/servers.js, line 143, character 7:[0m Combine this with the previous 'var' statement.
var self = this;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 145, character 7:[0m Combine this with the previous 'var' statement.
var stopOptions = {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 157, character 11:[0m Combine this with the previous 'var' statement.
var done = false;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 158, character 7:[0m Function statements should not be placed in blocks. Use a function expression or move the statement to the top of the outer function.
function check() {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 159, character 19:[0m Expected '{' and instead saw 'return'.
if (done) return;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 159, character 19:[0m Expected 'return' at column 9, not column 19.
if (done) return;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 161, character 26:[0m Expected '{' and instead saw 'return'.
if (checks <= 0) return;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 161, character 26:[0m Expected 'return' at column 9, not column 26.
if (checks <= 0) return;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 164, character 11:[0m 'finish' was used before it was defined.
finish(new Error('Machine unresponsive to STOP'));
[1;31mpkgcloud/joyent/compute/client/servers.js, line 173, character 54:[0m Expected ';' and instead saw '}'.
if (err) { return callback && callback(err) }
[1;31mpkgcloud/joyent/compute/client/servers.js, line 176, character 13:[0m 'finish' was used before it was defined.
finish();
[1;31mpkgcloud/joyent/compute/client/servers.js, line 185, character 7:[0m Unexpected 'else' after 'return'.
return;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 187, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 187, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 188, character 7:[0m Expected 'finish' at column 9, not column 7.
finish();
[1;31mpkgcloud/joyent/compute/client/servers.js, line 188, character 7:[0m 'finish' was used before it was defined.
finish();
[1;31mpkgcloud/joyent/compute/client/servers.js, line 189, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/joyent/compute/client/servers.js, line 191, character 14:[0m 'finish' was used before it was defined.
function finish() {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 215, character 7:[0m Expected 'serverId' at column 5, not column 7.
serverId = server instanceof base.Server ? server.id : server;
[1;31mpkgcloud/joyent/compute/client/servers.js, line 218, character 7:[0m Expected 'path' at column 5, not column 7.
path: this.account + '/machines/' + serverId
[1;31mpkgcloud/joyent/compute/client/servers.js, line 219, character 5:[0m Expected '}' at column 3, not column 5.
}, function (err, body, res) {
[1;31mpkgcloud/joyent/compute/client/servers.js, line 220, character 7:[0m Expected 'return' at column 5, not column 7.
return err
[1;31mpkgcloud/joyent/compute/client/servers.js, line 236, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/mongohq/database/client/databases.js, line 8, character 2:[0m Expected 'var' at column 1, not column 2.
var errs     = require('errs'),
[1;31mpkgcloud/mongohq/database/client/databases.js, line 9, character 6:[0m Expected 'url' at column 3, not column 6.
url      = require('url');
[1;31mpkgcloud/mongohq/database/client/databases.js, line 20, character 42:[0m Expected ';' and instead saw ','.
dbname = info.pathname.replace('/', ''),
[1;31mpkgcloud/mongohq/database/client/databases.js, line 20, character 42:[0m Expected ',' at column 3, not column 42.
dbname = info.pathname.replace('/', ''),
[1;31mpkgcloud/mongohq/database/client/databases.js, line 20, character 42:[0m Expected an identifier and instead saw ','.
dbname = info.pathname.replace('/', ''),
[1;31mpkgcloud/mongohq/database/client/databases.js, line 20, character 42:[0m Stopping.  (19% scanned).

[1;31mpkgcloud/mongohq/database/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin   = require('url-join'),
[1;31mpkgcloud/mongohq/database/client/index.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base      = require('../../../core/base'),
[1;31mpkgcloud/mongohq/database/client/index.js, line 11, character 5:[0m Expected 'auth' at column 3, not column 5.
auth      = require('../../../common/auth'),
[1;31mpkgcloud/mongohq/database/client/index.js, line 12, character 5:[0m Expected 'url' at column 3, not column 5.
url       = require('url'),
[1;31mpkgcloud/mongohq/database/client/index.js, line 13, character 5:[0m Expected 'request' at column 3, not column 5.
request   = require('request'),
[1;31mpkgcloud/mongohq/database/client/index.js, line 14, character 5:[0m Expected 'errs' at column 3, not column 5.
errs      = require('errs');
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 9, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs');
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 15, character 119:[0m Line too long.
// #### options['password'] {string} Password for the account (Optional), If not specify so mongolab will generate one.
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 25, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 31, character 16:[0m ['email'] is better written in dot notation.
if (!options['email']) {
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 38, character 133:[0m Line too long.
// https://objectlabs.jira.com/wiki/display/partners/MongoLab+Partner+Integration+API#MongoLabPartnerIntegrationAPI-Createaccount.1
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 40, character 36:[0m ['email'] is better written in dot notation.
var adminUser = { email: options['email'] };
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 42, character 15:[0m ['password'] is better written in dot notation.
if (options['password']) {
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 43, character 31:[0m ['password'] is better written in dot notation.
if (/[+\d]/g.test(options['password'])) {
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 44, character 17:[0m ['password'] is better written in dot notation.
adminUser['password'] = options['password'];
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 44, character 39:[0m ['password'] is better written in dot notation.
adminUser['password'] = options['password'];
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 52, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 56, character 44:[0m ['name'] is better written in dot notation.
name: [this.config.username, options['name']].join('_'),
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 98, character 11:[0m Expected 'return' at column 9, not column 11.
return account.adminUser;
[1;31mpkgcloud/mongolab/database/client/accounts.js, line 99, character 9:[0m Expected '}' at column 7, not column 9.
}));
[1;31mpkgcloud/mongolab/database/client/databases.js, line 9, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/mongolab/database/client/databases.js, line 10, character 5:[0m Expected 'qs' at column 3, not column 5.
qs       = require('querystring'),
[1;31mpkgcloud/mongolab/database/client/databases.js, line 11, character 5:[0m Expected 'url' at column 3, not column 5.
url      = require('url');
[1;31mpkgcloud/mongolab/database/client/databases.js, line 25, character 7:[0m Combine this with the previous 'var' statement.
var database = {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 51, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 57, character 16:[0m ['owner'] is better written in dot notation.
if (!options['owner']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 63, character 16:[0m ['plan'] is better written in dot notation.
if (!options['plan']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 64, character 13:[0m ['plan'] is better written in dot notation.
options['plan'] = 'free';
[1;31mpkgcloud/mongolab/database/client/databases.js, line 69, character 31:[0m ['owner'] is better written in dot notation.
var databaseName = [options['owner'], options['name']].join('_');
[1;31mpkgcloud/mongolab/database/client/databases.js, line 69, character 49:[0m ['name'] is better written in dot notation.
var databaseName = [options['owner'], options['name']].join('_');
[1;31mpkgcloud/mongolab/database/client/databases.js, line 75, character 7:[0m Combine this with the previous 'var' statement.
var account = options['owner'];
[1;31mpkgcloud/mongolab/database/client/databases.js, line 75, character 25:[0m ['owner'] is better written in dot notation.
var account = options['owner'];
[1;31mpkgcloud/mongolab/database/client/databases.js, line 77, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 82, character 21:[0m ['plan'] is better written in dot notation.
plan: options['plan'],
[1;31mpkgcloud/mongolab/database/client/databases.js, line 83, character 25:[0m ['owner'] is better written in dot notation.
username: options['owner'],
[1;31mpkgcloud/mongolab/database/client/databases.js, line 119, character 128:[0m Line too long.
// https://objectlabs.jira.com/wiki/display/partners/MongoLab+Partner+Integration+API#MongoLabPartnerIntegrationAPI-Viewdatabase
[1;31mpkgcloud/mongolab/database/client/databases.js, line 133, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 140, character 16:[0m ['owner'] is better written in dot notation.
if (!options['owner']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 146, character 35:[0m ['owner'] is better written in dot notation.
var path = ['accounts', options['owner'], 'databases', options['name']].join('/');
[1;31mpkgcloud/mongolab/database/client/databases.js, line 146, character 66:[0m ['name'] is better written in dot notation.
var path = ['accounts', options['owner'], 'databases', options['name']].join('/');
[1;31mpkgcloud/mongolab/database/client/databases.js, line 169, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 176, character 16:[0m ['owner'] is better written in dot notation.
if (!options['owner']) {
[1;31mpkgcloud/mongolab/database/client/databases.js, line 184, character 32:[0m ['owner'] is better written in dot notation.
path: ['accounts', options['owner'], 'databases', options['name']].join('/')
[1;31mpkgcloud/mongolab/database/client/databases.js, line 184, character 63:[0m ['name'] is better written in dot notation.
path: ['accounts', options['owner'], 'databases', options['name']].join('/')
[1;31mpkgcloud/mongolab/database/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin   = require('url-join'),
[1;31mpkgcloud/mongolab/database/client/index.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base      = require('../../../core/base'),
[1;31mpkgcloud/mongolab/database/client/index.js, line 11, character 5:[0m Expected 'auth' at column 3, not column 5.
auth      = require('../../../common/auth');
[1;31mpkgcloud/mongolab/database/client/index.js, line 44, character 7:[0m Use the || operator.
? this.config.username
[1;31mpkgcloud/openstack/client.js, line 9, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/client.js, line 10, character 5:[0m Expected 'through' at column 3, not column 5.
through = require('through'),
[1;31mpkgcloud/openstack/client.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../core/base'),
[1;31mpkgcloud/openstack/client.js, line 12, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs'),
[1;31mpkgcloud/openstack/client.js, line 13, character 5:[0m Expected 'context' at column 3, not column 5.
context = require('./context');
[1;31mpkgcloud/openstack/client.js, line 62, character 39:[0m Expected exactly one space between 'function' and '('.
this._identity.on('log::*', function(message, object) {
[1;31mpkgcloud/openstack/client.js, line 71, character 48:[0m Expected exactly one space between 'function' and '('.
Client.prototype._getIdentityOptions = function() {
[1;31mpkgcloud/openstack/client.js, line 81, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (this.config.tenantName) {
[1;31mpkgcloud/openstack/client.js, line 81, character 3:[0m Expected 'else' at column 5, not column 3.
else if (this.config.tenantName) {
[1;31mpkgcloud/openstack/client.js, line 128, character 36:[0m Expected exactly one space between 'function' and '('.
self._identity.authorize(function(err) {
[1;31mpkgcloud/openstack/client.js, line 150, character 5:[0m Expected exactly one space between '}' and 'catch'.
catch (e) {
[1;31mpkgcloud/openstack/client.js, line 150, character 5:[0m Expected 'catch' at column 7, not column 5.
catch (e) {
[1;31mpkgcloud/openstack/client.js, line 151, character 7:[0m Expected 'self' at column 9, not column 7.
self.emit('log::error', 'Unable to select endpoint for service', {
[1;31mpkgcloud/openstack/client.js, line 152, character 9:[0m Expected 'error' at column 11, not column 9.
error: e.toString(),
[1;31mpkgcloud/openstack/client.js, line 153, character 9:[0m Expected 'options' at column 11, not column 9.
options: options
[1;31mpkgcloud/openstack/client.js, line 154, character 7:[0m Expected '}' at column 9, not column 7.
});
[1;31mpkgcloud/openstack/client.js, line 155, character 7:[0m Expected 'callback' at column 9, not column 7.
callback(e);
[1;31mpkgcloud/openstack/client.js, line 156, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/client.js, line 175, character 9:[0m Combine this with the previous 'var' statement.
var buf = through().pause();
[1;31mpkgcloud/openstack/client.js, line 188, character 7:[0m Expected exactly one space between '}' and 'else'.
else if (options.download) {
[1;31mpkgcloud/openstack/client.js, line 188, character 7:[0m Expected 'else' at column 9, not column 7.
else if (options.download) {
[1;31mpkgcloud/openstack/client.js, line 195, character 5:[0m Unexpected 'else' after 'return'.
return buf;
[1;31mpkgcloud/openstack/client.js, line 197, character 3:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/client.js, line 197, character 3:[0m Expected 'else' at column 5, not column 3.
else {
[1;31mpkgcloud/openstack/client.js, line 198, character 5:[0m Expected 'self' at column 7, not column 5.
self.emit('log::trace', 'Creating Authenticated Request');
[1;31mpkgcloud/openstack/client.js, line 199, character 5:[0m Expected 'return' at column 7, not column 5.
return Client.super_.prototype._request.call(self, options, callback);
[1;31mpkgcloud/openstack/client.js, line 200, character 3:[0m Expected '}' at column 5, not column 3.
}
[1;31mpkgcloud/openstack/client.js, line 205, character 7:[0m Expected 'authorized' at column 5, not column 7.
authorized = false;
[1;31mpkgcloud/openstack/client.js, line 207, character 131:[0m Line too long.
if (!self._serviceUrl || !self._identity || !self._identity.token || !self._identity.token.id || !self._identity.token.expires) {
[1;31mpkgcloud/openstack/client.js, line 210, character 107:[0m Line too long.
else if (self._identity.token.expires.getTime() - new Date().getTime() > self.config.earlyTokenTimeout) {
[1;31mpkgcloud/openstack/client.js, line 210, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (self._identity.token.expires.getTime() - new Date().getTime() > self.config.earlyTokenTimeout) {
[1;31mpkgcloud/openstack/client.js, line 210, character 3:[0m Expected 'else' at column 5, not column 3.
else if (self._identity.token.expires.getTime() - new Date().getTime() > self.config.earlyTokenTimeout) {
[1;31mpkgcloud/openstack/compute/flavor.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base  = require('../../core/compute/flavor');
[1;31mpkgcloud/openstack/compute/image.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/compute/image');
[1;31mpkgcloud/openstack/compute/server.js, line 9, character 5:[0m Expected 'compute' at column 3, not column 5.
compute = require('../../core/compute'),
[1;31mpkgcloud/openstack/compute/server.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base    = require('../../core/compute/server'),
[1;31mpkgcloud/openstack/compute/server.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_       = require('underscore');
[1;31mpkgcloud/openstack/compute/server.js, line 27, character 7:[0m Expected 'case' at column 5, not column 7.
case 'BUILD':
[1;31mpkgcloud/openstack/compute/server.js, line 28, character 7:[0m Expected 'case' at column 5, not column 7.
case 'REBUILD':
[1;31mpkgcloud/openstack/compute/server.js, line 29, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.provisioning;
[1;31mpkgcloud/openstack/compute/server.js, line 30, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 31, character 7:[0m Expected 'case' at column 5, not column 7.
case 'ACTIVE':
[1;31mpkgcloud/openstack/compute/server.js, line 32, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.running;
[1;31mpkgcloud/openstack/compute/server.js, line 33, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 34, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SUSPENDED':
[1;31mpkgcloud/openstack/compute/server.js, line 35, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SHUTOFF':
[1;31mpkgcloud/openstack/compute/server.js, line 36, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.stopped;
[1;31mpkgcloud/openstack/compute/server.js, line 37, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 38, character 7:[0m Expected 'case' at column 5, not column 7.
case 'REBOOT':
[1;31mpkgcloud/openstack/compute/server.js, line 39, character 7:[0m Expected 'case' at column 5, not column 7.
case 'HARD_REBOOT':
[1;31mpkgcloud/openstack/compute/server.js, line 40, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.reboot;
[1;31mpkgcloud/openstack/compute/server.js, line 41, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 42, character 7:[0m Expected 'case' at column 5, not column 7.
case 'QUEUE_RESIZE':
[1;31mpkgcloud/openstack/compute/server.js, line 43, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PREP_RESIZE':
[1;31mpkgcloud/openstack/compute/server.js, line 44, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RESIZE':
[1;31mpkgcloud/openstack/compute/server.js, line 45, character 7:[0m Expected 'case' at column 5, not column 7.
case 'VERIFY_RESIZE':
[1;31mpkgcloud/openstack/compute/server.js, line 46, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SHARE_IP':
[1;31mpkgcloud/openstack/compute/server.js, line 47, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SHARE_IP_NO_CONFIG':
[1;31mpkgcloud/openstack/compute/server.js, line 48, character 7:[0m Expected 'case' at column 5, not column 7.
case 'DELETE_IP':
[1;31mpkgcloud/openstack/compute/server.js, line 49, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PASSWORD':
[1;31mpkgcloud/openstack/compute/server.js, line 50, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.updating;
[1;31mpkgcloud/openstack/compute/server.js, line 51, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 52, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RESCUE':
[1;31mpkgcloud/openstack/compute/server.js, line 53, character 7:[0m Expected 'case' at column 5, not column 7.
case 'ERROR':
[1;31mpkgcloud/openstack/compute/server.js, line 54, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.error;
[1;31mpkgcloud/openstack/compute/server.js, line 55, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 56, character 7:[0m Expected 'default' at column 5, not column 7.
default:
[1;31mpkgcloud/openstack/compute/server.js, line 57, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.unknown;
[1;31mpkgcloud/openstack/compute/server.js, line 58, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/openstack/compute/server.js, line 76, character 61:[0m Expected an identifier and instead saw 'public' (a reserved word).
if (Object.keys(this.addresses).length && !this.addresses.public
[1;31mpkgcloud/openstack/compute/server.js, line 77, character 5:[0m Expected '&&' at column 7, not column 5.
&& !this.addresses.private) {
[1;31mpkgcloud/openstack/compute/server.js, line 77, character 24:[0m Expected an identifier and instead saw 'private' (a reserved word).
&& !this.addresses.private) {
[1;31mpkgcloud/openstack/compute/server.js, line 83, character 47:[0m Expected an identifier and instead saw 'interface' (a reserved word).
Object.keys(interfaces).map(function (interface) {
[1;31mpkgcloud/openstack/compute/server.js, line 84, character 29:[0m Expected an identifier and instead saw 'interface'.
return interfaces[interface].addr;
[1;31mpkgcloud/openstack/compute/server.js, line 84, character 29:[0m Stopping.  (58% scanned).

[1;31mpkgcloud/openstack/compute/client/flavors.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin  = require('url-join'),
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.openstack.compute;
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 22, character 30:[0m Expected exactly one space between 'function' and '('.
exports.getFlavors = function(callback) {
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 32, character 7:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 34, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 34, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 35, character 7:[0m Expected 'return' at column 9, not column 7.
return callback(null, body.flavors.map(function (result) {
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 36, character 9:[0m Expected 'return' at column 11, not column 9.
return new compute.Flavor(self, result);
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 37, character 7:[0m Expected '}' at column 9, not column 7.
}));
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 38, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 53, character 7:[0m Expected 'flavorId' at column 5, not column 7.
flavorId = flavor instanceof base.Flavor ? flavor.id : flavor;
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 62, character 7:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 64, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 64, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 65, character 7:[0m Expected 'return' at column 9, not column 7.
return callback(null, new compute.Flavor(self, body.flavor));
[1;31mpkgcloud/openstack/compute/client/flavors.js, line 66, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/compute/client/images.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/openstack/compute/client/images.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin  = require('url-join'),
[1;31mpkgcloud/openstack/compute/client/images.js, line 10, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.openstack.compute;
[1;31mpkgcloud/openstack/compute/client/images.js, line 36, character 20:[0m Unexpected space between '!' and 'body'.
if (!body || ! body.images) {
[1;31mpkgcloud/openstack/compute/client/images.js, line 37, character 7:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/openstack/compute/client/images.js, line 39, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/images.js, line 39, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/compute/client/images.js, line 40, character 7:[0m Expected 'return' at column 9, not column 7.
return callback(null, body.images.map(function (result) {
[1;31mpkgcloud/openstack/compute/client/images.js, line 41, character 9:[0m Expected 'return' at column 11, not column 9.
return new compute.Image(self, result);
[1;31mpkgcloud/openstack/compute/client/images.js, line 42, character 7:[0m Expected '}' at column 9, not column 7.
}));
[1;31mpkgcloud/openstack/compute/client/images.js, line 43, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/compute/client/images.js, line 58, character 7:[0m Expected 'imageId' at column 5, not column 7.
imageId = image instanceof base.Image ? image.id : image;
[1;31mpkgcloud/openstack/compute/client/images.js, line 67, character 7:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/openstack/compute/client/images.js, line 69, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/images.js, line 69, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/compute/client/images.js, line 70, character 7:[0m Expected 'return' at column 9, not column 7.
return callback(null, new compute.Image(self, body.image));
[1;31mpkgcloud/openstack/compute/client/images.js, line 71, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/compute/client/images.js, line 89, character 7:[0m Expected 'serverId' at column 5, not column 7.
serverId;
[1;31mpkgcloud/openstack/compute/client/images.js, line 95, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/openstack/compute/client/images.js, line 110, character 16:[0m Expected exactly one space between 'function' and '('.
}, function(err, body) {
[1;31mpkgcloud/openstack/compute/client/images.js, line 115, character 9:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/openstack/compute/client/images.js, line 117, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/images.js, line 117, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/openstack/compute/client/images.js, line 118, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(null, new compute.Image(self, body.image));
[1;31mpkgcloud/openstack/compute/client/images.js, line 119, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/openstack/compute/client/images.js, line 137, character 7:[0m Expected 'path' at column 5, not column 7.
path: urlJoin(_urlPrefix, imageId),
[1;31mpkgcloud/openstack/compute/client/images.js, line 138, character 7:[0m Expected 'method' at column 5, not column 7.
method: 'DELETE'
[1;31mpkgcloud/openstack/compute/client/images.js, line 139, character 5:[0m Expected '}' at column 3, not column 5.
},
[1;31mpkgcloud/openstack/compute/client/images.js, line 144, character 3:[0m Expected '}' at column 5, not column 3.
});
[1;31mpkgcloud/openstack/compute/client/index.js, line 9, character 5:[0m Expected 'openstack' at column 3, not column 5.
openstack = require('../../client'),
[1;31mpkgcloud/openstack/compute/client/index.js, line 10, character 5:[0m Expected 'ComputeClient' at column 3, not column 5.
ComputeClient = require('../computeClient').ComputeClient,
[1;31mpkgcloud/openstack/compute/client/index.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/compute/client/servers.js, line 8, character 5:[0m Expected 'base' at column 3, not column 5.
base     = require('../../../core/compute'),
[1;31mpkgcloud/openstack/compute/client/servers.js, line 9, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/openstack/compute/client/servers.js, line 10, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/openstack/compute/client/servers.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin  = require('url-join'),
[1;31mpkgcloud/openstack/compute/client/servers.js, line 12, character 5:[0m Expected 'util' at column 3, not column 5.
util     = require('util'),
[1;31mpkgcloud/openstack/compute/client/servers.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_        = require('underscore'),
[1;31mpkgcloud/openstack/compute/client/servers.js, line 14, character 5:[0m Expected 'Server' at column 3, not column 5.
Server   = require('../server').Server,
[1;31mpkgcloud/openstack/compute/client/servers.js, line 15, character 5:[0m Expected 'compute' at column 3, not column 5.
compute  = pkgcloud.providers.openstack.compute;
[1;31mpkgcloud/openstack/compute/client/servers.js, line 30, character 35:[0m Expected exactly one space between 'function' and '('.
exports._doServerAction = function(server, body, callback) {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 32, character 7:[0m Expected 'serverId' at column 5, not column 7.
serverId = server instanceof Server ? server.id : server;
[1;31mpkgcloud/openstack/compute/client/servers.js, line 34, character 7:[0m Combine this with the previous 'var' statement.
var actionOptions = {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 62, character 7:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 80, character 7:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/openstack/compute/client/servers.js, line 82, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 82, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 83, character 7:[0m Expected 'return' at column 9, not column 7.
return callback(null, body.servers.map(function (result) {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 84, character 9:[0m Expected 'return' at column 11, not column 9.
return new compute.Server(self, result);
[1;31mpkgcloud/openstack/compute/client/servers.js, line 85, character 7:[0m Expected '}' at column 9, not column 7.
}));
[1;31mpkgcloud/openstack/compute/client/servers.js, line 86, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/compute/client/servers.js, line 115, character 8:[0m 'validateProperties' was used before it was defined.
if (!validateProperties(['flavor', 'image', 'name'], details,
[1;31mpkgcloud/openstack/compute/client/servers.js, line 116, character 5:[0m Expected 'options.%s is a required argument.' at column 7, not column 5.
'options.%s is a required argument.', callback)) {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 184, character 7:[0m Expected 'serverId' at column 5, not column 7.
serverId = server instanceof base.Server ? server.id : server;
[1;31mpkgcloud/openstack/compute/client/servers.js, line 193, character 7:[0m Unexpected 'else' after 'return'.
return new Error('Unexpected empty response');
[1;31mpkgcloud/openstack/compute/client/servers.js, line 195, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 195, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 196, character 7:[0m Expected 'callback' at column 9, not column 7.
callback(null, new compute.Server(self, body.server), res);
[1;31mpkgcloud/openstack/compute/client/servers.js, line 197, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/compute/client/servers.js, line 351, character 7:[0m Combine this with the previous 'var' statement.
var options = {
[1;31mpkgcloud/openstack/compute/client/servers.js, line 379, character 15:[0m Expected exactly one space between 'typeof' and '('.
if (typeof(options[item]) === 'undefined') {
[1;31mpkgcloud/openstack/compute/client/extensions/floating-ips.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join');
[1;31mpkgcloud/openstack/compute/client/extensions/floating-ips.js, line 42, character 41:[0m Expected exactly one space between 'function' and '('.
exports.allocateNewFloatingIp = function(pool, callback) {
[1;31mpkgcloud/openstack/compute/client/extensions/floating-ips.js, line 58, character 41:[0m Expected exactly one space between 'function' and '('.
return this._request(options, function(err, body) {
[1;31mpkgcloud/openstack/compute/client/extensions/floating-ips.js, line 74, character 33:[0m Expected exactly one space between 'function' and '('.
exports.getFloatingIp = function(floatingIp, callback) {
[1;31mpkgcloud/openstack/compute/client/extensions/floating-ips.js, line 118, character 88:[0m Expected ';' and instead saw 'return'.
var floatingIpAddress = (typeof floatingIp === 'object') ? floatingIp.ip : floatingIp
[1;31mpkgcloud/openstack/compute/client/extensions/floating-ips.js, line 140, character 88:[0m Expected ';' and instead saw 'return'.
var floatingIpAddress = (typeof floatingIp === 'object') ? floatingIp.ip : floatingIp
[1;31mpkgcloud/openstack/compute/client/extensions/index.js, line 14, character 26:[0m Expected exactly one space between 'function' and '('.
getExtensions: function(callback) {
[1;31mpkgcloud/openstack/compute/client/extensions/keys.js, line 45, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (options.key) {
[1;31mpkgcloud/openstack/compute/client/extensions/keys.js, line 45, character 3:[0m Expected 'else' at column 5, not column 3.
else if (options.key) {
[1;31mpkgcloud/openstack/compute/client/extensions/networks-base.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/compute/client/extensions/networks-base.js, line 14, character 42:[0m Expected exactly one space between 'function' and '('.
exports.createNetworkExtension = function(prefix) {
[1;31mpkgcloud/openstack/compute/client/extensions/networks-base.js, line 66, character 102:[0m Line too long.
* @param {String}      [options.bridge_interface]      The bridge is connected to this interface.
[1;31mpkgcloud/openstack/compute/client/extensions/networks-base.js, line 239, character 4:[0m Expected ';' and instead saw '}'.
}
[1;31mpkgcloud/openstack/compute/client/extensions/networks.js, line 12, character 5:[0m Expected 'networks' at column 3, not column 5.
networks = require('./networks-base');
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 9, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore'),
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 10, character 5:[0m Expected 'async' at column 3, not column 5.
async = require('async');
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 48, character 29:[0m ['security_group_rule'] is better written in dot notation.
: callback(null, body['security_group_rule'], res);
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 61, character 28:[0m Expected exactly one space between 'function' and '('.
exports.addRules = function(rules, callback) {
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 64, character 40:[0m Expected exactly one space between 'function' and '('.
async.forEachLimit(rules, 5, function(rule, next) {
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 65, character 32:[0m Expected exactly one space between 'function' and '('.
self.addRule(rule, function(err, rule) {
[1;31mpkgcloud/openstack/compute/client/extensions/security-group-rules.js, line 74, character 14:[0m Expected exactly one space between 'function' and '('.
}, function(err) {
[1;31mpkgcloud/openstack/compute/client/extensions/security-groups.js, line 32, character 29:[0m ['security_groups'] is better written in dot notation.
: callback(null, body['security_groups'], res);
[1;31mpkgcloud/openstack/compute/client/extensions/security-groups.js, line 41, character 103:[0m Line too long.
* @param {object|String}   options         The object (or securityGroup to generate) for the new group
[1;31mpkgcloud/openstack/compute/client/extensions/security-groups.js, line 65, character 29:[0m ['security_group'] is better written in dot notation.
: callback(null, body['security_group']);
[1;31mpkgcloud/openstack/compute/client/extensions/servers.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join');
[1;31mpkgcloud/openstack/compute/client/extensions/servers.js, line 25, character 5:[0m Expected 'return' at column 3, not column 5.
return this._doServerAction(server,
[1;31mpkgcloud/openstack/compute/client/extensions/servers.js, line 28, character 13:[0m Expected 'return' at column 7, not column 13.
return callback(err);
[1;31mpkgcloud/openstack/compute/client/extensions/servers.js, line 42, character 5:[0m Expected 'return' at column 3, not column 5.
return this._doServerAction(server,
[1;31mpkgcloud/openstack/compute/client/extensions/servers.js, line 45, character 13:[0m Expected 'return' at column 7, not column 13.
return callback(err);
[1;31mpkgcloud/openstack/compute/client/extensions/servers.js, line 46, character 9:[0m Expected '}' at column 5, not column 9.
});
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join');
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 14, character 5:[0m Expected '_extension' at column 3, not column 5.
_extension = 'os-volume_attachments';
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 25, character 40:[0m Expected exactly one space between 'function' and '('.
exports.getVolumeAttachments = function(server, callback) {
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 49, character 7:[0m Expected 'attachmentId' at column 5, not column 7.
attachmentId = (typeof attachment === 'object') ? attachment.id : attachment;
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 70, character 32:[0m Expected exactly one space between 'function' and '('.
exports.detachVolume = function(server, attachment, callback) {
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 72, character 7:[0m Expected 'attachmentId' at column 5, not column 7.
attachmentId = (typeof attachment === 'object') ? attachment.id : attachment;
[1;31mpkgcloud/openstack/compute/client/extensions/volume-attachments.js, line 94, character 7:[0m Expected 'volumeId' at column 5, not column 7.
volumeId = (typeof volume === 'object') ? volume.id : volume;
[1;31mpkgcloud/openstack/context/identity.js, line 10, character 5:[0m Expected 'events' at column 3, not column 5.
events = require('eventemitter2'),
[1;31mpkgcloud/openstack/context/identity.js, line 11, character 5:[0m Expected 'fs' at column 3, not column 5.
fs = require('fs'),
[1;31mpkgcloud/openstack/context/identity.js, line 12, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/context/identity.js, line 13, character 5:[0m Expected 'ServiceCatalog' at column 3, not column 5.
ServiceCatalog = require('./serviceCatalog').ServiceCatalog,
[1;31mpkgcloud/openstack/context/identity.js, line 14, character 5:[0m Expected 'svcCat' at column 3, not column 5.
svcCat = require('./serviceCatalog'),
[1;31mpkgcloud/openstack/context/identity.js, line 15, character 5:[0m Expected 'url' at column 3, not column 5.
url = require('url'),
[1;31mpkgcloud/openstack/context/identity.js, line 16, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/openstack/context/identity.js, line 17, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/context/identity.js, line 18, character 5:[0m Expected 'util' at column 3, not column 5.
util = require('util'),
[1;31mpkgcloud/openstack/context/identity.js, line 19, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../pkgcloud'),
[1;31mpkgcloud/openstack/context/identity.js, line 20, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs');
[1;31mpkgcloud/openstack/context/identity.js, line 80, character 7:[0m Combine this with the previous 'var' statement.
var authenticationOptions = {
[1;31mpkgcloud/openstack/context/identity.js, line 103, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (self.options.tenantName) {
[1;31mpkgcloud/openstack/context/identity.js, line 103, character 3:[0m Expected 'else' at column 5, not column 3.
else if (self.options.tenantName) {
[1;31mpkgcloud/openstack/context/identity.js, line 116, character 16:[0m 'getError' was used before it was defined.
var err2 = getError(err, response, body);
[1;31mpkgcloud/openstack/context/identity.js, line 132, character 7:[0m 'getTenantId' was used before it was defined.
getTenantId(urlJoin(options.url || self.options.url, '/v2.0/tenants'), body.access.token.id);
[1;31mpkgcloud/openstack/context/identity.js, line 134, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/context/identity.js, line 134, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/openstack/context/identity.js, line 135, character 7:[0m Expected 'try' at column 9, not column 7.
try {
[1;31mpkgcloud/openstack/context/identity.js, line 136, character 9:[0m Expected 'self' at column 11, not column 9.
self._parseIdentityResponse(body);
[1;31mpkgcloud/openstack/context/identity.js, line 137, character 9:[0m Expected 'callback' at column 11, not column 9.
callback();
[1;31mpkgcloud/openstack/context/identity.js, line 138, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/openstack/context/identity.js, line 139, character 7:[0m Expected exactly one space between '}' and 'catch'.
catch (e) {
[1;31mpkgcloud/openstack/context/identity.js, line 139, character 7:[0m Expected 'catch' at column 11, not column 7.
catch (e) {
[1;31mpkgcloud/openstack/context/identity.js, line 140, character 9:[0m Expected 'callback' at column 13, not column 9.
callback(e);
[1;31mpkgcloud/openstack/context/identity.js, line 141, character 7:[0m Expected '}' at column 11, not column 7.
}
[1;31mpkgcloud/openstack/context/identity.js, line 142, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/openstack/context/identity.js, line 158, character 29:[0m Use the || operator.
return callback(err ? err : new Error('Unable to find tenants'));
[1;31mpkgcloud/openstack/context/identity.js, line 204, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (self.options.token && (self.options.tenantId || self.options.tenantName)) {
[1;31mpkgcloud/openstack/context/identity.js, line 204, character 3:[0m Expected 'else' at column 5, not column 3.
else if (self.options.token && (self.options.tenantId || self.options.tenantName)) {
[1;31mpkgcloud/openstack/context/identity.js, line 230, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/openstack/context/identity.js, line 237, character 6:[0m Expected 'self' at column 5, not column 6.
self.serviceCatalog = new ServiceCatalog(data.access.serviceCatalog);
[1;31mpkgcloud/openstack/context/identity.js, line 247, character 5:[0m Unexpected 'else' after 'return'.
return this.serviceCatalog.getServiceEndpointUrl(options);
[1;31mpkgcloud/openstack/context/identity.js, line 249, character 3:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/context/identity.js, line 249, character 3:[0m Expected 'else' at column 5, not column 3.
else {
[1;31mpkgcloud/openstack/context/identity.js, line 250, character 5:[0m Expected 'return' at column 7, not column 5.
return this.options.url;
[1;31mpkgcloud/openstack/context/identity.js, line 251, character 3:[0m Expected '}' at column 5, not column 3.
}
[1;31mpkgcloud/openstack/context/service.js, line 64, character 32:[0m 'matchRegion' was used before it was defined.
if (!endpoint.region || !matchRegion(endpoint.region, options.region)) {
[1;31mpkgcloud/openstack/context/service.js, line 68, character 13:[0m 'getUrl' was used before it was defined.
url = getUrl(endpoint);
[1;31mpkgcloud/openstack/context/service.js, line 71, character 3:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/context/service.js, line 71, character 3:[0m Expected 'else' at column 5, not column 3.
else {
[1;31mpkgcloud/openstack/context/service.js, line 72, character 5:[0m Expected '_' at column 7, not column 5.
_.each(self.endpoints, function(endpoint) {
[1;31mpkgcloud/openstack/context/service.js, line 72, character 36:[0m Expected exactly one space between 'function' and '('.
_.each(self.endpoints, function(endpoint) {
[1;31mpkgcloud/openstack/context/service.js, line 74, character 7:[0m Expected 'if' at column 9, not column 7.
if (url) {
[1;31mpkgcloud/openstack/context/service.js, line 75, character 9:[0m Expected 'return' at column 11, not column 9.
return;
[1;31mpkgcloud/openstack/context/service.js, line 76, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/openstack/context/service.js, line 79, character 7:[0m Expected 'if' at column 9, not column 7.
if (!endpoint.region) {
[1;31mpkgcloud/openstack/context/service.js, line 80, character 9:[0m Expected 'url' at column 11, not column 9.
url = getUrl(endpoint);
[1;31mpkgcloud/openstack/context/service.js, line 80, character 15:[0m 'getUrl' was used before it was defined.
url = getUrl(endpoint);
[1;31mpkgcloud/openstack/context/service.js, line 81, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/openstack/context/service.js, line 82, character 5:[0m Expected '}' at column 7, not column 5.
});
[1;31mpkgcloud/openstack/context/service.js, line 83, character 3:[0m Expected '}' at column 5, not column 3.
}
[1;31mpkgcloud/openstack/context/service.js, line 97, character 7:[0m Expected 'options' at column 11, not column 7.
options.useInternal : false;
[1;31mpkgcloud/openstack/context/service.js, line 102, character 9:[0m Expected 'endpoint' at column 11, not column 9.
endpoint.adminURL : endpoint.publicURL);
[1;31mpkgcloud/openstack/context/service.js, line 116, character 5:[0m Unexpected 'else' after 'return'.
return true;
[1;31mpkgcloud/openstack/context/service.js, line 118, character 3:[0m Expected exactly one space between '}' and 'else'.
else if ((!a && b) || (a && !b)) {
[1;31mpkgcloud/openstack/context/service.js, line 118, character 3:[0m Expected 'else' at column 5, not column 3.
else if ((!a && b) || (a && !b)) {
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 10, character 5:[0m Expected 'Service' at column 3, not column 5.
Service = require('./service').Service,
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 11, character 5:[0m Expected 'async' at column 3, not column 5.
async = require('async'),
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 37, character 58:[0m Expected exactly one space between 'function' and '('.
ServiceCatalog.prototype.getServiceEndpointUrl = function(options) {
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 40, character 7:[0m Combine this with the previous 'var' statement.
var _endpoint = null;
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 42, character 33:[0m Expected exactly one space between 'function' and '('.
_.each(self.services, function(service) {
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 51, character 5:[0m Unexpected 'else' after 'return'.
return _endpoint;
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 53, character 3:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 53, character 3:[0m Expected 'else' at column 5, not column 3.
else {
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 54, character 5:[0m Expected 'throw' at column 7, not column 5.
throw new Error('Unable to find matching endpoint for requested service');
[1;31mpkgcloud/openstack/context/serviceCatalog.js, line 55, character 3:[0m Expected '}' at column 5, not column 3.
}
[1;31mpkgcloud/openstack/identity/client/index.js, line 10, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/identity/client/index.js, line 11, character 5:[0m Expected 'openstack' at column 3, not column 5.
openstack = require('../../client'),
[1;31mpkgcloud/openstack/identity/client/index.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/identity/client/index.js, line 80, character 114:[0m Line too long.
*  This is an administrative API that allows a admin to get detailed information about the specified tenant by ID
[1;31mpkgcloud/openstack/identity/client/index.js, line 94, character 45:[0m Use the || operator.
path: urlJoin('/v2.0/tenants', tenantId ? tenantId : '')
[1;31mpkgcloud/openstack/network/network.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/network/network'),
[1;31mpkgcloud/openstack/network/network.js, line 10, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/network.js, line 30, character 3:[0m Expected 'tenant_id' at column 5, not column 3.
'tenant_id', 'subnets']);
[1;31mpkgcloud/openstack/network/networkClient.js, line 9, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/networkClient.js, line 30, character 7:[0m Expected exactly one space between 'if' and '('.
if(options.method === 'GET') {
[1;31mpkgcloud/openstack/network/networkClient.js, line 40, character 7:[0m Combine this with the previous 'var' statement.
var serviceUrl = options.serviceType ? this._identity.getServiceEndpointUrl({
[1;31mpkgcloud/openstack/network/port.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/network/port'),
[1;31mpkgcloud/openstack/network/port.js, line 10, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/port.js, line 37, character 3:[0m Expected 'network_id' at column 5, not column 3.
'network_id', 'tenant_id', 'extra_dhcp_opts', 'device_owner',
[1;31mpkgcloud/openstack/network/port.js, line 38, character 3:[0m Expected 'mac_address' at column 5, not column 3.
'mac_address', 'fixed_ips', 'id', 'security_groups', 'device_id']);
[1;31mpkgcloud/openstack/network/subnet.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/network/subnet'),
[1;31mpkgcloud/openstack/network/subnet.js, line 10, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/subnet.js, line 32, character 3:[0m Expected 'tenant_id' at column 5, not column 3.
'tenant_id', 'gateway_ip', 'dns_nameservers']);
[1;31mpkgcloud/openstack/network/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/network/client/index.js, line 10, character 5:[0m Expected 'openstack' at column 3, not column 5.
openstack = require('../../client'),
[1;31mpkgcloud/openstack/network/client/index.js, line 11, character 5:[0m Expected 'NetworkClient' at column 3, not column 5.
NetworkClient = require('../networkClient').NetworkClient,
[1;31mpkgcloud/openstack/network/client/index.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/client/networks.js, line 10, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/network/client/networks.js, line 11, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../pkgcloud'),
[1;31mpkgcloud/openstack/network/client/networks.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/network/client/networks.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/client/networks.js, line 31, character 7:[0m Combine this with the previous 'var' statement.
var getNetworkOpts = {
[1;31mpkgcloud/openstack/network/client/networks.js, line 37, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/openstack/network/client/networks.js, line 39, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.networks || !(body.networks instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/networks.js, line 39, character 5:[0m Expected 'else' at column 7, not column 5.
else if (!body || !body.networks || !(body.networks instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/networks.js, line 69, character 17:[0m Missing space between '||' and '!'.
if (!body ||!body.network) {
[1;31mpkgcloud/openstack/network/client/networks.js, line 88, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/openstack/network/client/networks.js, line 90, character 7:[0m Combine this with the previous 'var' statement.
var createNetworkOpts = {
[1;31mpkgcloud/openstack/network/client/networks.js, line 97, character 50:[0m Missing space between ',' and 'body'.
this._request(createNetworkOpts, function (err,body) {
[1;31mpkgcloud/openstack/network/client/networks.js, line 113, character 105:[0m Line too long.
var self = this, networkToUpdate = network instanceof this.models.Network ? network.toJSON() : network;
[1;31mpkgcloud/openstack/network/client/networks.js, line 114, character 7:[0m Combine this with the previous 'var' statement.
var createNetworkOpts = {
[1;31mpkgcloud/openstack/network/client/networks.js, line 122, character 50:[0m Missing space between ',' and 'body'.
this._request(createNetworkOpts, function (err,body) {
[1;31mpkgcloud/openstack/network/client/networks.js, line 142, character 36:[0m Missing space between ',' and 'networkId'.
path: urlJoin('/v2.0/networks',networkId),
[1;31mpkgcloud/openstack/network/client/ports.js, line 10, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/network/client/ports.js, line 11, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../pkgcloud'),
[1;31mpkgcloud/openstack/network/client/ports.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/network/client/ports.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/client/ports.js, line 31, character 7:[0m Combine this with the previous 'var' statement.
var getPortOpts = {
[1;31mpkgcloud/openstack/network/client/ports.js, line 37, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/openstack/network/client/ports.js, line 39, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.ports || !(body.ports instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/ports.js, line 39, character 5:[0m Expected 'else' at column 7, not column 5.
else if (!body || !body.ports || !(body.ports instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/ports.js, line 69, character 17:[0m Missing space between '||' and '!'.
if (!body ||!body.port) {
[1;31mpkgcloud/openstack/network/client/ports.js, line 88, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/openstack/network/client/ports.js, line 90, character 7:[0m Combine this with the previous 'var' statement.
var createPortOpts = {
[1;31mpkgcloud/openstack/network/client/ports.js, line 97, character 47:[0m Missing space between ',' and 'body'.
this._request(createPortOpts, function (err,body) {
[1;31mpkgcloud/openstack/network/client/ports.js, line 114, character 7:[0m Combine this with the previous 'var' statement.
var createPortOpts = {
[1;31mpkgcloud/openstack/network/client/ports.js, line 122, character 47:[0m Missing space between ',' and 'body'.
this._request(createPortOpts, function (err,body) {
[1;31mpkgcloud/openstack/network/client/ports.js, line 142, character 33:[0m Missing space between ',' and 'portId'.
path: urlJoin('/v2.0/ports',portId),
[1;31mpkgcloud/openstack/network/client/subnets.js, line 10, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/network/client/subnets.js, line 11, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../pkgcloud'),
[1;31mpkgcloud/openstack/network/client/subnets.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/network/client/subnets.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/network/client/subnets.js, line 22, character 126:[0m Line too long.
* @param {String}            [options.marker]  Marker value. Operation returns object names that are greater than this value.
[1;31mpkgcloud/openstack/network/client/subnets.js, line 23, character 113:[0m Line too long.
* @param {String}            [options.end_marker]  Operation returns object names that are less than this value.
[1;31mpkgcloud/openstack/network/client/subnets.js, line 34, character 7:[0m Combine this with the previous 'var' statement.
var getSubnetOpts = {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 35, character 26:[0m Unexpected ','.
path: '/v2.0/subnets',
[1;31mpkgcloud/openstack/network/client/subnets.js, line 36, character 4:[0m Expected '}' at column 3, not column 4.
};
[1;31mpkgcloud/openstack/network/client/subnets.js, line 40, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/openstack/network/client/subnets.js, line 42, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (!body ||!body.subnets || !(body.subnets instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 42, character 5:[0m Expected 'else' at column 7, not column 5.
else if (!body ||!body.subnets || !(body.subnets instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 42, character 22:[0m Missing space between '||' and '!'.
else if (!body ||!body.subnets || !(body.subnets instanceof Array)) {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 91, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/openstack/network/client/subnets.js, line 93, character 7:[0m Combine this with the previous 'var' statement.
var createSubnetOpts = {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 100, character 49:[0m Missing space between ',' and 'body'.
this._request(createSubnetOpts, function (err,body) {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 117, character 7:[0m Combine this with the previous 'var' statement.
var updateSubnetOpts = {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 125, character 49:[0m Missing space between ',' and 'body'.
this._request(updateSubnetOpts, function (err,body) {
[1;31mpkgcloud/openstack/network/client/subnets.js, line 145, character 35:[0m Missing space between ',' and 'subnetId'.
path: urlJoin('/v2.0/subnets',subnetId),
[1;31mpkgcloud/openstack/storage/container.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/storage/container'),
[1;31mpkgcloud/openstack/storage/container.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/storage/container.js, line 31, character 48:[0m Expected ';' and instead saw 'this'.
this.count = details.count || this.count || 0
[1;31mpkgcloud/openstack/storage/file.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/storage/file');
[1;31mpkgcloud/openstack/storage/file.js, line 47, character 57:[0m ['content_type'] is better written in dot notation.
this.contentType = details['content-type'] || details['content_type'] || null;
[1;31mpkgcloud/openstack/storage/file.js, line 51, character 15:[0m ['last_modified'] is better written in dot notation.
: details['last_modified']
[1;31mpkgcloud/openstack/storage/file.js, line 52, character 24:[0m ['last_modified'] is better written in dot notation.
? new Date(details['last_modified'])
[1;31mpkgcloud/openstack/storage/file.js, line 57, character 15:[0m ['bytes'] is better written in dot notation.
: details['bytes']
[1;31mpkgcloud/openstack/storage/file.js, line 58, character 24:[0m ['bytes'] is better written in dot notation.
? parseInt(details['bytes'], 10)
[1;31mpkgcloud/openstack/storage/file.js, line 63, character 15:[0m Expected a conditional expression and instead saw an assignment.
if (match = header.match(/x-object-meta-(\w+)/i)) {
[1;31mpkgcloud/openstack/storage/storageClient.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/storage/storageClient.js, line 14, character 1:[0m Expected an identifier and instead saw 'const'.
const CONTAINER_META_PREFIX = 'x-container-meta-';
[1;31mpkgcloud/openstack/storage/storageClient.js, line 14, character 1:[0m Stopping.  (14% scanned).

[1;31mpkgcloud/openstack/storage/client/containers.js, line 11, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/storage/client/containers.js, line 13, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../pkgcloud'),
[1;31mpkgcloud/openstack/storage/client/containers.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/openstack/storage/client/containers.js, line 23, character 126:[0m Line too long.
* @param {String}            [options.marker]  Marker value. Operation returns object names that are greater than this value.
[1;31mpkgcloud/openstack/storage/client/containers.js, line 24, character 113:[0m Line too long.
* @param {String}            [options.end_marker]  Operation returns object names that are less than this value.
[1;31mpkgcloud/openstack/storage/client/containers.js, line 35, character 7:[0m Combine this with the previous 'var' statement.
var getContainerOpts = {
[1;31mpkgcloud/openstack/storage/client/containers.js, line 41, character 3:[0m Unexpected ';'.
;
[1;31mpkgcloud/openstack/storage/client/containers.js, line 41, character 3:[0m Unexpected space between ';' and ';'.
;
[1;31mpkgcloud/openstack/storage/client/containers.js, line 41, character 3:[0m Expected ';' at column 5, not column 3.
;
[1;31mpkgcloud/openstack/storage/client/containers.js, line 44, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/openstack/storage/client/containers.js, line 46, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !(body instanceof Array)) {
[1;31mpkgcloud/openstack/storage/client/containers.js, line 46, character 5:[0m Expected 'else' at column 7, not column 5.
else if (!body || !(body instanceof Array)) {
[1;31mpkgcloud/openstack/storage/client/containers.js, line 47, character 49:[0m Expected ';' and instead saw '}'.
return new Error('Malformed API Response')
[1;31mpkgcloud/openstack/storage/client/containers.js, line 100, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/openstack/storage/client/containers.js, line 102, character 7:[0m Combine this with the previous 'var' statement.
var createContainerOpts = {
[1;31mpkgcloud/openstack/storage/client/containers.js, line 108, character 103:[0m Line too long.
createContainerOpts.headers = self.serializeMetadata(self.CONTAINER_META_PREFIX, options.metadata);
[1;31mpkgcloud/openstack/storage/client/containers.js, line 114, character 109:[0m Line too long.
: callback(null, new self.models.Container(self, { name: containerName, metadata: options.metadata }));
[1;31mpkgcloud/openstack/storage/client/containers.js, line 154, character 44:[0m Expected exactly one space between 'function' and '('.
exports._updateContainerMetadata = function(container, metadata, callback) {
[1;31mpkgcloud/openstack/storage/client/containers.js, line 161, character 7:[0m Combine this with the previous 'var' statement.
var updateContainerOpts = {
[1;31mpkgcloud/openstack/storage/client/containers.js, line 191, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/openstack/storage/client/containers.js, line 206, character 18:[0m Expected exactly one space between 'function' and '('.
}, function(err) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 10, character 5:[0m Expected 'filed' at column 3, not column 5.
filed = require('filed'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 11, character 5:[0m Expected 'mime' at column 3, not column 5.
mime = require('mime'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 12, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 13, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 14, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../../core/storage'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 15, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../pkgcloud'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 16, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore'),
[1;31mpkgcloud/openstack/storage/client/files.js, line 17, character 5:[0m Expected 'storage' at column 3, not column 5.
storage = pkgcloud.providers.openstack.storage;
[1;31mpkgcloud/openstack/storage/client/files.js, line 30, character 7:[0m Expected 'fileName' at column 5, not column 7.
fileName = file instanceof this.models.File ? file.name : file;
[1;31mpkgcloud/openstack/storage/client/files.js, line 33, character 7:[0m Expected 'method' at column 5, not column 7.
method: 'DELETE',
[1;31mpkgcloud/openstack/storage/client/files.js, line 34, character 7:[0m Expected 'container' at column 5, not column 7.
container: containerName,
[1;31mpkgcloud/openstack/storage/client/files.js, line 35, character 7:[0m Expected 'path' at column 5, not column 7.
path: fileName
[1;31mpkgcloud/openstack/storage/client/files.js, line 36, character 5:[0m Expected '}' at column 3, not column 5.
}, function(err) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 36, character 16:[0m Expected exactly one space between 'function' and '('.
}, function(err) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 37, character 7:[0m Expected 'return' at column 5, not column 7.
return err
[1;31mpkgcloud/openstack/storage/client/files.js, line 40, character 5:[0m Expected '}' at column 3, not column 5.
}
[1;31mpkgcloud/openstack/storage/client/files.js, line 41, character 3:[0m Expected ')' at column 5, not column 3.
);
[1;31mpkgcloud/openstack/storage/client/files.js, line 56, character 104:[0m Line too long.
* @param {Stream}          [options.stream]    optionally explicitly provide the stream instead of pipe
[1;31mpkgcloud/openstack/storage/client/files.js, line 79, character 7:[0m Expected 'success' at column 5, not column 7.
success = callback ? onUpload : null,
[1;31mpkgcloud/openstack/storage/client/files.js, line 80, character 7:[0m Expected 'self' at column 5, not column 7.
self = this,
[1;31mpkgcloud/openstack/storage/client/files.js, line 81, character 7:[0m Expected 'apiStream' at column 5, not column 7.
apiStream,
[1;31mpkgcloud/openstack/storage/client/files.js, line 82, character 7:[0m Expected 'inputStream' at column 5, not column 7.
inputStream,
[1;31mpkgcloud/openstack/storage/client/files.js, line 83, character 7:[0m Expected 'uploadOptions' at column 5, not column 7.
uploadOptions;
[1;31mpkgcloud/openstack/storage/client/files.js, line 101, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (options.stream) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 101, character 3:[0m Expected 'else' at column 5, not column 3.
else if (options.stream) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 118, character 40:[0m Expected exactly one space between 'function' and '('.
inputStream.on('response', function(response) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 122, character 8:[0m Expected ';' and instead saw '}'.
}
[1;31mpkgcloud/openstack/storage/client/files.js, line 151, character 104:[0m Line too long.
* @param {Stream}          [options.stream]    optionally explicitly provide the stream instead of pipe
[1;31mpkgcloud/openstack/storage/client/files.js, line 157, character 7:[0m Expected 'success' at column 5, not column 7.
success = callback ? onDownload : null,
[1;31mpkgcloud/openstack/storage/client/files.js, line 157, character 28:[0m 'onDownload' was used before it was defined.
success = callback ? onDownload : null,
[1;31mpkgcloud/openstack/storage/client/files.js, line 158, character 7:[0m Expected 'container' at column 5, not column 7.
container = options.container,
[1;31mpkgcloud/openstack/storage/client/files.js, line 159, character 7:[0m Expected 'inputStream' at column 5, not column 7.
inputStream,
[1;31mpkgcloud/openstack/storage/client/files.js, line 160, character 7:[0m Expected 'apiStream' at column 5, not column 7.
apiStream;
[1;31mpkgcloud/openstack/storage/client/files.js, line 166, character 12:[0m 'onDownload' was used before it was defined.
function onDownload(err, body, res) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 170, character 11:[0m Expected 'container' at column 9, not column 11.
container: container,
[1;31mpkgcloud/openstack/storage/client/files.js, line 171, character 11:[0m Expected 'name' at column 9, not column 11.
name: options.remote
[1;31mpkgcloud/openstack/storage/client/files.js, line 172, character 9:[0m Expected '}' at column 7, not column 9.
})));
[1;31mpkgcloud/openstack/storage/client/files.js, line 182, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (options.stream) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 182, character 3:[0m Expected 'else' at column 5, not column 3.
else if (options.stream) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 210, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/openstack/storage/client/files.js, line 223, character 11:[0m Expected 'container' at column 9, not column 11.
container: container,
[1;31mpkgcloud/openstack/storage/client/files.js, line 224, character 11:[0m Expected 'name' at column 9, not column 11.
name: file
[1;31mpkgcloud/openstack/storage/client/files.js, line 225, character 9:[0m Expected '}' at column 7, not column 9.
})));
[1;31mpkgcloud/openstack/storage/client/files.js, line 232, character 115:[0m Line too long.
* @description get the list of files in a container. Returns at most 10,000 files if options.limit is unspecified.
[1;31mpkgcloud/openstack/storage/client/files.js, line 238, character 105:[0m Line too long.
* @param {String}            [options.marker]  the id of the first record to return in the current query
[1;31mpkgcloud/openstack/storage/client/files.js, line 254, character 107:[0m Line too long.
// Limit is specified and is >10k. Abstract the aggregation of files (cloudfiles returns max 10k at once)
[1;31mpkgcloud/openstack/storage/client/files.js, line 255, character 7:[0m Combine this with the previous 'var' statement.
var files = [];
[1;31mpkgcloud/openstack/storage/client/files.js, line 258, character 7:[0m Combine this with the previous 'var' statement.
var remainingLimit = options.limit;
[1;31mpkgcloud/openstack/storage/client/files.js, line 261, character 7:[0m Combine this with the previous 'var' statement.
var getFilesCallback = function(err, someFiles) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 261, character 34:[0m Expected exactly one space between 'function' and '('.
var getFilesCallback = function(err, someFiles) {
[1;31mpkgcloud/openstack/storage/client/files.js, line 261, character 34:[0m Too many errors. (73% scanned).

[1;31mpkgcloud/openstack/storage/client/index.js, line 10, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/openstack/storage/client/index.js, line 11, character 5:[0m Expected 'openstack' at column 3, not column 5.
openstack = require('../../client'),
[1;31mpkgcloud/openstack/storage/client/index.js, line 12, character 5:[0m Expected 'StorageClient' at column 3, not column 5.
StorageClient = require('../storageClient').StorageClient,
[1;31mpkgcloud/openstack/storage/client/index.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/client.js, line 9, character 5:[0m Expected 'identity' at column 3, not column 5.
identity = require('./identity'),
[1;31mpkgcloud/rackspace/client.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../openstack/client'),
[1;31mpkgcloud/rackspace/client.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/client.js, line 30, character 48:[0m Expected exactly one space between 'function' and '('.
Client.prototype._getIdentityOptions = function() {
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/base'),
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 23, character 39:[0m ['display_name'] is better written in dot notation.
this.name = details.name || details['display_name'];
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 24, character 53:[0m ['display_description'] is better written in dot notation.
this.description = details.description || details['display_description'];
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 25, character 28:[0m ['created_at'] is better written in dot notation.
this.createdAt = details['created_at'];
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 26, character 27:[0m ['volume_id'] is better written in dot notation.
this.volumeId = details['volume_id'];
[1;31mpkgcloud/rackspace/blockstorage/snapshot.js, line 32, character 108:[0m Line too long.
return _.pick(this, ['id', 'status', 'name', 'description', 'createdAt', 'size', 'volumeId', 'metadata']);
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/base'),
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 23, character 39:[0m ['display_name'] is better written in dot notation.
this.name = details.name || details['display_name'];
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 24, character 53:[0m ['display_description'] is better written in dot notation.
this.description = details.description || details['display_description'];
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 25, character 28:[0m ['created_at'] is better written in dot notation.
this.createdAt = details['created_at'];
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 27, character 51:[0m ['volume_type'] is better written in dot notation.
this.volumeType = details.volumeType || details['volume_type'];
[1;31mpkgcloud/rackspace/blockstorage/volume.js, line 29, character 51:[0m ['snapshot_id'] is better written in dot notation.
this.snapshotId = details.snapshotId || details['snapshot_id'];
[1;31mpkgcloud/rackspace/blockstorage/volumetype.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/base'),
[1;31mpkgcloud/rackspace/blockstorage/volumetype.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/blockstorage/volumetype.js, line 26, character 39:[0m Expected exactly one space between 'function' and '('.
VolumeType.prototype.toJSON = function() {
[1;31mpkgcloud/rackspace/blockstorage/client/index.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/blockstorage/client/index.js, line 12, character 5:[0m Expected 'rackspace' at column 3, not column 5.
rackspace = require('../../client');
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 11, character 5:[0m Expected 'Snapshot' at column 3, not column 5.
Snapshot = require('../snapshot').Snapshot,
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join');
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 28, character 7:[0m Expected 'path' at column 5, not column 7.
path = _urlPrefix;
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 33, character 3:[0m Expected exactly one space between '}' and 'else'.
else if ((typeof options === 'boolean') && (options)) {
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 33, character 3:[0m Expected 'else' at column 5, not column 3.
else if ((typeof options === 'boolean') && (options)) {
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 43, character 7:[0m Expected 'return' at column 9, not column 7.
return new Snapshot(self, data);
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 44, character 5:[0m Expected '}' at column 7, not column 5.
}), res);
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 59, character 7:[0m Expected 'snapshotId' at column 5, not column 7.
snapshotId = snapshot instanceof Snapshot ? snapshot.id : snapshot;
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 83, character 34:[0m Expected exactly one space between 'function' and '('.
exports.createSnapshot = function(details, callback) {
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 86, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 99, character 40:[0m Expected exactly one space between 'function' and '('.
self._request(createOptions, function(err, body, res) {
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 120, character 7:[0m Expected 'snapshotId' at column 5, not column 7.
snapshotId = snapshot instanceof Snapshot ? snapshot.id : snapshot;
[1;31mpkgcloud/rackspace/blockstorage/client/snapshots.js, line 122, character 7:[0m Combine this with the previous 'var' statement.
var updateOptions = {
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 11, character 5:[0m Expected 'Volume' at column 3, not column 5.
Volume = require('../volume').Volume,
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 12, character 5:[0m Expected 'VolumeType' at column 3, not column 5.
VolumeType = require('../volumetype').VolumeType,
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 13, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join');
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 29, character 7:[0m Expected 'path' at column 5, not column 7.
path = _urlPrefix;
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 34, character 3:[0m Expected exactly one space between '}' and 'else'.
else if ((typeof options === 'boolean') && (options)) {
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 34, character 3:[0m Expected 'else' at column 5, not column 3.
else if ((typeof options === 'boolean') && (options)) {
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 44, character 7:[0m Expected 'return' at column 9, not column 7.
return new Volume(self, data);
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 45, character 5:[0m Expected '}' at column 7, not column 5.
}), res);
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 88, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 101, character 31:[0m ['volume_type'] is better written in dot notation.
createOptions.body.volume['volume_type'] =
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 108, character 31:[0m ['snapshot_id'] is better written in dot notation.
createOptions.body.volume['snapshot_id'] = options.snapshotId;
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 131, character 7:[0m Expected 'volumeId' at column 5, not column 7.
volumeId = volume instanceof Volume ? volume.id : volume;
[1;31mpkgcloud/rackspace/blockstorage/client/volumes.js, line 133, character 7:[0m Combine this with the previous 'var' statement.
var updateOptions = {
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 11, character 5:[0m Expected 'VolumeType' at column 3, not column 5.
VolumeType = require('../volumetype').VolumeType,
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join');
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 24, character 34:[0m Expected exactly one space between 'function' and '('.
exports.getVolumeTypes = function(callback) {
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 31, character 29:[0m ['volume_types'] is better written in dot notation.
: callback(null, body['volume_types'].map(function (data) {
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 32, character 7:[0m Expected 'return' at column 9, not column 7.
return new VolumeType(self, data);
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 33, character 5:[0m Expected '}' at column 7, not column 5.
}), res);
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 49, character 7:[0m Combine this with the previous 'var' statement.
var self = this;
[1;31mpkgcloud/rackspace/blockstorage/client/volumetypes.js, line 55, character 50:[0m ['volume_type'] is better written in dot notation.
: callback(null, new VolumeType(self, body['volume_type']));
[1;31mpkgcloud/rackspace/compute/server.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../openstack/compute/server');
[1;31mpkgcloud/rackspace/compute/client/index.js, line 9, character 5:[0m Expected 'rackspace' at column 3, not column 5.
rackspace = require('../../client'),
[1;31mpkgcloud/rackspace/compute/client/index.js, line 10, character 5:[0m Expected 'ComputeClient' at column 3, not column 5.
ComputeClient = require('../../../openstack/compute/computeClient').ComputeClient,
[1;31mpkgcloud/rackspace/compute/client/index.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/compute/client/extensions/virtual-interfacesv2.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/compute/client/extensions/virtual-interfacesv2.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/compute/client/extensions/virtual-interfacesv2.js, line 16, character 5:[0m Expected '_extension' at column 3, not column 5.
_extension = 'os-virtual-interfacesv2';
[1;31mpkgcloud/rackspace/compute/client/extensions/virtual-interfacesv2.js, line 50, character 7:[0m Expected 'networkId' at column 5, not column 7.
networkId = (typeof network === 'object') ? network.id : network;
[1;31mpkgcloud/rackspace/compute/client/extensions/virtual-interfacesv2.js, line 79, character 7:[0m Expected 'networkId' at column 5, not column 7.
networkId = (typeof network === 'object') ? network.id : network;
[1;31mpkgcloud/rackspace/database/database.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../../core/base/model');
[1;31mpkgcloud/rackspace/database/database.js, line 25, character 29:[0m Expected '{' and instead saw 'this'.
if (details.characterSet) this.characterSet = details.characterSet;
[1;31mpkgcloud/rackspace/database/database.js, line 25, character 29:[0m Expected 'this' at column 3, not column 29.
if (details.characterSet) this.characterSet = details.characterSet;
[1;31mpkgcloud/rackspace/database/database.js, line 26, character 26:[0m Expected '{' and instead saw 'this'.
if (details.collation) this.collation = details.collation;
[1;31mpkgcloud/rackspace/database/database.js, line 26, character 26:[0m Expected 'this' at column 3, not column 26.
if (details.collation) this.collation = details.collation;
[1;31mpkgcloud/rackspace/database/flavor.js, line 9, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../openstack/compute/flavor');
[1;31mpkgcloud/rackspace/database/instance.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../../core/base/model'),
[1;31mpkgcloud/rackspace/database/instance.js, line 10, character 5:[0m Expected 'computeStatus' at column 3, not column 5.
computeStatus = require('../../common/status').compute;
[1;31mpkgcloud/rackspace/database/instance.js, line 30, character 36:[0m Use the || operator.
details.state = (details.status) ? details.status : details.state;
[1;31mpkgcloud/rackspace/database/instance.js, line 34, character 7:[0m Expected 'case' at column 5, not column 7.
case 'PROVISIONING':
[1;31mpkgcloud/rackspace/database/instance.js, line 35, character 7:[0m Expected 'case' at column 5, not column 7.
case 'BUILD':
[1;31mpkgcloud/rackspace/database/instance.js, line 36, character 7:[0m Expected 'case' at column 5, not column 7.
case 'REBOOT':
[1;31mpkgcloud/rackspace/database/instance.js, line 37, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RESIZE':
[1;31mpkgcloud/rackspace/database/instance.js, line 38, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.provisioning;
[1;31mpkgcloud/rackspace/database/instance.js, line 39, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/rackspace/database/instance.js, line 40, character 7:[0m Expected 'case' at column 5, not column 7.
case 'RUNNING':
[1;31mpkgcloud/rackspace/database/instance.js, line 41, character 7:[0m Expected 'case' at column 5, not column 7.
case 'ACTIVE': // Change for keep consistency
[1;31mpkgcloud/rackspace/database/instance.js, line 42, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.running;
[1;31mpkgcloud/rackspace/database/instance.js, line 43, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/rackspace/database/instance.js, line 44, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPING':
[1;31mpkgcloud/rackspace/database/instance.js, line 45, character 7:[0m Expected 'case' at column 5, not column 7.
case 'STOPPED':
[1;31mpkgcloud/rackspace/database/instance.js, line 46, character 7:[0m Expected 'case' at column 5, not column 7.
case 'SHUTDOWN':
[1;31mpkgcloud/rackspace/database/instance.js, line 47, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.stopped;
[1;31mpkgcloud/rackspace/database/instance.js, line 48, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/rackspace/database/instance.js, line 49, character 7:[0m Expected 'case' at column 5, not column 7.
case 'FAILED':
[1;31mpkgcloud/rackspace/database/instance.js, line 50, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.error;
[1;31mpkgcloud/rackspace/database/instance.js, line 51, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/rackspace/database/instance.js, line 52, character 7:[0m Expected 'default' at column 5, not column 7.
default:
[1;31mpkgcloud/rackspace/database/instance.js, line 53, character 9:[0m Expected 'this' at column 7, not column 9.
this.status = this.STATUS.unknown;
[1;31mpkgcloud/rackspace/database/instance.js, line 54, character 9:[0m Expected 'break' at column 7, not column 9.
break;
[1;31mpkgcloud/rackspace/database/user.js, line 9, character 5:[0m Expected 'model' at column 3, not column 5.
model = require('../../core/base/model');
[1;31mpkgcloud/rackspace/database/client/databases.js, line 9, character 5:[0m Expected 'Database' at column 3, not column 5.
Database = pkgcloud.providers.rackspace.database.Database,
[1;31mpkgcloud/rackspace/database/client/databases.js, line 10, character 5:[0m Expected 'Instance' at column 3, not column 5.
Instance = pkgcloud.providers.rackspace.database.Instance,
[1;31mpkgcloud/rackspace/database/client/databases.js, line 11, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/rackspace/database/client/databases.js, line 12, character 5:[0m Expected 'qs' at column 3, not column 5.
qs       = require('querystring');
[1;31mpkgcloud/rackspace/database/client/databases.js, line 18, character 117:[0m Line too long.
// #### options['instance'] {string | Object} The instance could be the ID or a instance of Instance class (required)
[1;31mpkgcloud/rackspace/database/client/databases.js, line 19, character 101:[0m Line too long.
// #### options['character_set'] {string} Should be a valid CharacterSet for mysql. Default to 'utf8'
[1;31mpkgcloud/rackspace/database/client/databases.js, line 20, character 101:[0m Line too long.
// #### options['collate'] {string} Should be a valid Collate for mysql. Default to 'utf8_general_ci'
[1;31mpkgcloud/rackspace/database/client/databases.js, line 21, character 120:[0m Line too long.
// For more info about character_set and collate for mysql see http://dev.mysql.com/doc/refman/5.6/en/charset-mysql.html
[1;31mpkgcloud/rackspace/database/client/databases.js, line 32, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/rackspace/database/client/databases.js, line 38, character 16:[0m ['instance'] is better written in dot notation.
if (!options['instance']) {
[1;31mpkgcloud/rackspace/database/client/databases.js, line 46, character 106:[0m Line too long.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 46, character 7:[0m Combine this with the previous 'var' statement.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 46, character 28:[0m ['instance'] is better written in dot notation.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 46, character 70:[0m ['instance'] is better written in dot notation.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 46, character 95:[0m ['instance'] is better written in dot notation.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 49, character 7:[0m Combine this with the previous 'var' statement.
var reqDatabase = { name: options['name'] };
[1;31mpkgcloud/rackspace/database/client/databases.js, line 49, character 37:[0m ['name'] is better written in dot notation.
var reqDatabase = { name: options['name'] };
[1;31mpkgcloud/rackspace/database/client/databases.js, line 52, character 26:[0m ['character_set'] is better written in dot notation.
if (options && options['character_set']) {
[1;31mpkgcloud/rackspace/database/client/databases.js, line 53, character 17:[0m ['character_set'] is better written in dot notation.
reqDatabase['character_set'] = options['character_set'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 53, character 44:[0m ['character_set'] is better written in dot notation.
reqDatabase['character_set'] = options['character_set'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 56, character 26:[0m ['collate'] is better written in dot notation.
if (options && options['collate']) {
[1;31mpkgcloud/rackspace/database/client/databases.js, line 57, character 17:[0m ['collate'] is better written in dot notation.
reqDatabase['collate'] = options['collate'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 57, character 38:[0m ['collate'] is better written in dot notation.
reqDatabase['collate'] = options['collate'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 60, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/rackspace/database/client/databases.js, line 77, character 117:[0m Line too long.
// #### options['instance'] {string | Object} The instance could be the ID or a instance of Instance class (required)
[1;31mpkgcloud/rackspace/database/client/databases.js, line 83, character 7:[0m Expected 'completeUrl' at column 5, not column 7.
completeUrl = {},
[1;31mpkgcloud/rackspace/database/client/databases.js, line 84, character 7:[0m Expected 'requestOptions' at column 5, not column 7.
requestOptions = {};
[1;31mpkgcloud/rackspace/database/client/databases.js, line 92, character 16:[0m ['instance'] is better written in dot notation.
if (!options['instance']) {
[1;31mpkgcloud/rackspace/database/client/databases.js, line 106, character 106:[0m Line too long.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 106, character 7:[0m Combine this with the previous 'var' statement.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 106, character 28:[0m ['instance'] is better written in dot notation.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 106, character 70:[0m ['instance'] is better written in dot notation.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 106, character 95:[0m ['instance'] is better written in dot notation.
var instanceId = options['instance'] instanceof Instance ? options['instance'].id : options['instance'];
[1;31mpkgcloud/rackspace/database/client/databases.js, line 128, character 107:[0m Line too long.
// #### @database {string | Object} The database could be the ID or a instance of Database class (required)
[1;31mpkgcloud/rackspace/database/client/databases.js, line 129, character 107:[0m Line too long.
// #### @instance {string | Object} The instance could be the ID or a instance of Instance class (required)
[1;31mpkgcloud/rackspace/database/client/databases.js, line 146, character 7:[0m Combine this with the previous 'var' statement.
var databaseName = database instanceof Database ? database.name : database;
[1;31mpkgcloud/rackspace/database/client/flavors.js, line 9, character 5:[0m Expected 'Flavor' at column 3, not column 5.
Flavor   = pkgcloud.providers.rackspace.database.Flavor;
[1;31mpkgcloud/rackspace/database/client/flavors.js, line 28, character 11:[0m Expected 'return' at column 9, not column 11.
return new Flavor(self, result);
[1;31mpkgcloud/rackspace/database/client/flavors.js, line 29, character 9:[0m Expected '}' at column 7, not column 9.
}));
[1;31mpkgcloud/rackspace/database/client/index.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin   = require('url-join'),
[1;31mpkgcloud/rackspace/database/client/index.js, line 10, character 5:[0m Expected 'request' at column 3, not column 5.
request   = require('request'),
[1;31mpkgcloud/rackspace/database/client/index.js, line 11, character 5:[0m Expected 'rackspace' at column 3, not column 5.
rackspace = require('../../client'),
[1;31mpkgcloud/rackspace/database/client/index.js, line 12, character 5:[0m Expected 'auth' at column 3, not column 5.
auth      = require('../../../common/auth.js'),
[1;31mpkgcloud/rackspace/database/client/index.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_         = require('underscore');
[1;31mpkgcloud/rackspace/database/client/instances.js, line 9, character 5:[0m Expected 'Flavor' at column 3, not column 5.
Flavor   = pkgcloud.providers.rackspace.database.Flavor,
[1;31mpkgcloud/rackspace/database/client/instances.js, line 10, character 5:[0m Expected 'Instance' at column 3, not column 5.
Instance = pkgcloud.providers.rackspace.database.Instance,
[1;31mpkgcloud/rackspace/database/client/instances.js, line 11, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/rackspace/database/client/instances.js, line 12, character 5:[0m Expected 'qs' at column 3, not column 5.
qs       = require('querystring');
[1;31mpkgcloud/rackspace/database/client/instances.js, line 18, character 118:[0m Line too long.
// #### options['flavor'] {string | Object} Should be the HREF for the flavor or a instance of Flavor class (required)
[1;31mpkgcloud/rackspace/database/client/instances.js, line 20, character 111:[0m Line too long.
// #### options['databases'] {array} Array of strings with database names to create when the instance is ready.
[1;31mpkgcloud/rackspace/database/client/instances.js, line 24, character 7:[0m Expected 'flavorRef' at column 5, not column 7.
flavorRef,
[1;31mpkgcloud/rackspace/database/client/instances.js, line 25, character 7:[0m Expected 'size' at column 5, not column 7.
size;
[1;31mpkgcloud/rackspace/database/client/instances.js, line 34, character 16:[0m ['name'] is better written in dot notation.
if (!options['name']) {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 40, character 16:[0m ['flavor'] is better written in dot notation.
if (!options['flavor']) {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 47, character 26:[0m ['databases'] is better written in dot notation.
if (options && options['databases'] &&
[1;31mpkgcloud/rackspace/database/client/instances.js, line 48, character 22:[0m ['databases'] is better written in dot notation.
typeof options['databases'] === 'array' &&
[1;31mpkgcloud/rackspace/database/client/instances.js, line 49, character 15:[0m ['databases'] is better written in dot notation.
options['databases'].length > 0) {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 50, character 13:[0m ['databases'] is better written in dot notation.
options['databases'].forEach(function (item, idx) {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 53, character 17:[0m ['databases'] is better written in dot notation.
options['databases'][idx] = {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 63, character 26:[0m ['size'] is better written in dot notation.
if (options && options['size']) {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 65, character 24:[0m ['size'] is better written in dot notation.
if (typeof options['size'] !== 'number') {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 70, character 21:[0m ['size'] is better written in dot notation.
size = (options['size'] > 0 && options['size'] < 9) ? options['size'] : 1;
[1;31mpkgcloud/rackspace/database/client/instances.js, line 70, character 44:[0m ['size'] is better written in dot notation.
size = (options['size'] > 0 && options['size'] < 9) ? options['size'] : 1;
[1;31mpkgcloud/rackspace/database/client/instances.js, line 70, character 67:[0m ['size'] is better written in dot notation.
size = (options['size'] > 0 && options['size'] < 9) ? options['size'] : 1;
[1;31mpkgcloud/rackspace/database/client/instances.js, line 75, character 26:[0m ['flavor'] is better written in dot notation.
if (options && options['flavor']) {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 76, character 25:[0m ['flavor'] is better written in dot notation.
flavorRef = options['flavor'] instanceof Flavor ? options['flavor'].href : options['flavor'];
[1;31mpkgcloud/rackspace/database/client/instances.js, line 76, character 63:[0m ['flavor'] is better written in dot notation.
flavorRef = options['flavor'] instanceof Flavor ? options['flavor'].href : options['flavor'];
[1;31mpkgcloud/rackspace/database/client/instances.js, line 76, character 88:[0m ['flavor'] is better written in dot notation.
flavorRef = options['flavor'] instanceof Flavor ? options['flavor'].href : options['flavor'];
[1;31mpkgcloud/rackspace/database/client/instances.js, line 79, character 7:[0m Combine this with the previous 'var' statement.
var createOptions = {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 84, character 23:[0m ['name'] is better written in dot notation.
name: options['name'],
[1;31mpkgcloud/rackspace/database/client/instances.js, line 86, character 28:[0m ['databases'] is better written in dot notation.
databases: options['databases'] || [],
[1;31mpkgcloud/rackspace/database/client/instances.js, line 106, character 7:[0m Expected 'completeUrl' at column 5, not column 7.
completeUrl = {},
[1;31mpkgcloud/rackspace/database/client/instances.js, line 107, character 7:[0m Expected 'requestOptions' at column 5, not column 7.
requestOptions = {};
[1;31mpkgcloud/rackspace/database/client/instances.js, line 177, character 7:[0m Combine this with the previous 'var' statement.
var instanceId = instance instanceof Instance ? instance.id : instance;
[1;31mpkgcloud/rackspace/database/client/instances.js, line 201, character 7:[0m Combine this with the previous 'var' statement.
var restartOptions = {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 250, character 7:[0m Combine this with the previous 'var' statement.
var resizeOptions = {
[1;31mpkgcloud/rackspace/database/client/instances.js, line 300, character 7:[0m Combine this with the previous 'var' statement.
var resizeOptions = {
[1;31mpkgcloud/rackspace/database/client/users.js, line 9, character 5:[0m Expected 'Database' at column 3, not column 5.
Database = pkgcloud.providers.rackspace.database.Database,
[1;31mpkgcloud/rackspace/database/client/users.js, line 10, character 5:[0m Expected 'Instance' at column 3, not column 5.
Instance = pkgcloud.providers.rackspace.database.Instance,
[1;31mpkgcloud/rackspace/database/client/users.js, line 11, character 5:[0m Expected 'User' at column 3, not column 5.
User     = pkgcloud.providers.rackspace.database.User,
[1;31mpkgcloud/rackspace/database/client/users.js, line 12, character 5:[0m Expected 'errs' at column 3, not column 5.
errs     = require('errs'),
[1;31mpkgcloud/rackspace/database/client/users.js, line 13, character 5:[0m Expected 'async' at column 3, not column 5.
async    = require('async'),
[1;31mpkgcloud/rackspace/database/client/users.js, line 14, character 5:[0m Expected 'qs' at column 3, not column 5.
qs       = require('querystring');
[1;31mpkgcloud/rackspace/database/client/users.js, line 22, character 112:[0m Line too long.
// #### options['databases'] {string | array} Name or instances of databases that the user can access (required)
[1;31mpkgcloud/rackspace/database/client/users.js, line 23, character 134:[0m Line too long.
// #### options['instance'] {string | Object} The instance could be the ID for the instance or a instance of Instance class (required)
[1;31mpkgcloud/rackspace/database/client/users.js, line 26, character 7:[0m Expected 'users' at column 5, not column 7.
users = [],
[1;31mpkgcloud/rackspace/database/client/users.js, line 27, character 7:[0m Expected 'regex' at column 5, not column 7.
regex = /^\s|^\?|^@|^#| \w* \d* |'|"|`|;|,|\\|\/| \s$/,
[1;31mpkgcloud/rackspace/database/client/users.js, line 28, character 7:[0m Expected 'instanceId' at column 5, not column 7.
instanceId,
[1;31mpkgcloud/rackspace/database/client/users.js, line 29, character 7:[0m Expected 'count' at column 5, not column 7.
count = 0;
[1;31mpkgcloud/rackspace/database/client/users.js, line 40, character 10:[0m Move 'var' declarations to the top of the function.
for (var i = 0; i < options.length; i++) {
[1;31mpkgcloud/rackspace/database/client/users.js, line 40, character 10:[0m Stopping.  (14% scanned).

[1;31mpkgcloud/rackspace/dns/record.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/dns/record'),
[1;31mpkgcloud/rackspace/dns/record.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/dns/status.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/base/model');
[1;31mpkgcloud/rackspace/dns/status.js, line 29, character 7:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/status.js, line 36, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/dns/status.js, line 38, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (!body) {
[1;31mpkgcloud/rackspace/dns/status.js, line 38, character 5:[0m Expected 'else' at column 7, not column 5.
else if (!body) {
[1;31mpkgcloud/rackspace/dns/zone.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/dns/zone'),
[1;31mpkgcloud/rackspace/dns/zone.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/dns/client/index.js, line 11, character 5:[0m Expected 'rackspace' at column 3, not column 5.
rackspace = require('../../client'),
[1;31mpkgcloud/rackspace/dns/client/index.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/dns/client/index.js, line 13, character 5:[0m Expected 'Status' at column 3, not column 5.
Status = require('../status').Status,
[1;31mpkgcloud/rackspace/dns/client/index.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/dns/client/index.js, line 43, character 42:[0m Expected exactly one space between 'function' and '('.
Client.prototype._asyncRequest = function(options, callback) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/dns/client/records.js, line 12, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/rackspace/dns/client/records.js, line 13, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs'),
[1;31mpkgcloud/rackspace/dns/client/records.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore'),
[1;31mpkgcloud/rackspace/dns/client/records.js, line 15, character 5:[0m Expected 'dns' at column 3, not column 5.
dns = pkgcloud.providers.rackspace.dns;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 18, character 5:[0m Expected '_recordFragment' at column 3, not column 5.
_recordFragment = 'records';
[1;31mpkgcloud/rackspace/dns/client/records.js, line 30, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 32, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 37, character 9:[0m Expected exactly one space between 'if' and '('.
if(err) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 38, character 9:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/dns/client/records.js, line 41, character 7:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.records) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 41, character 7:[0m Expected 'else' at column 9, not column 7.
else if (!body || !body.records) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 42, character 9:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/rackspace/dns/client/records.js, line 45, character 7:[0m Expected exactly one space between '}' and 'else'.
else{
[1;31mpkgcloud/rackspace/dns/client/records.js, line 45, character 7:[0m Expected 'else' at column 9, not column 7.
else{
[1;31mpkgcloud/rackspace/dns/client/records.js, line 45, character 11:[0m Expected exactly one space between 'else' and '{'.
else{
[1;31mpkgcloud/rackspace/dns/client/records.js, line 45, character 11:[0m Missing space between 'else' and '{'.
else{
[1;31mpkgcloud/rackspace/dns/client/records.js, line 46, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(null, body.records.map(function (record) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 47, character 11:[0m Expected 'return' at column 13, not column 11.
return new dns.Record(self, record);
[1;31mpkgcloud/rackspace/dns/client/records.js, line 48, character 9:[0m Expected '}' at column 11, not column 9.
}), res);
[1;31mpkgcloud/rackspace/dns/client/records.js, line 49, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/dns/client/records.js, line 62, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone,
[1;31mpkgcloud/rackspace/dns/client/records.js, line 63, character 9:[0m Expected 'recordId' at column 7, not column 9.
recordId = record instanceof dns.Record ? record.id : record;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 65, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 94, character 9:[0m Expected 'data' at column 7, not column 9.
data = [],
[1;31mpkgcloud/rackspace/dns/client/records.js, line 95, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 124, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 132, character 48:[0m Expected exactly one space between 'function' and '('.
self._asyncRequest(requestOptions, function(err, result) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 137, character 15:[0m Expected 'return' at column 13, not column 15.
return new dns.Record(self, record);
[1;31mpkgcloud/rackspace/dns/client/records.js, line 138, character 13:[0m Expected '}' at column 11, not column 13.
})
[1;31mpkgcloud/rackspace/dns/client/records.js, line 151, character 50:[0m Expected exactly one space between 'function' and '('.
this.createRecords(zone, [ record ], function(err, records) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 167, character 9:[0m Expected 'data' at column 7, not column 9.
data = [],
[1;31mpkgcloud/rackspace/dns/client/records.js, line 168, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 196, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 208, character 9:[0m Expected 'return' at column 11, not column 9.
return new dns.Record(self, record);
[1;31mpkgcloud/rackspace/dns/client/records.js, line 209, character 7:[0m Expected '}' at column 9, not column 7.
}));
[1;31mpkgcloud/rackspace/dns/client/records.js, line 222, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone,
[1;31mpkgcloud/rackspace/dns/client/records.js, line 223, character 9:[0m Expected 'recordId' at column 7, not column 9.
recordId = record instanceof dns.Record ? record.id : record;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 225, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 244, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/records.js, line 246, character 9:[0m Combine this with the previous 'var' statement.
var ids = _.map(records, function(record) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 246, character 38:[0m Expected exactly one space between 'function' and '('.
var ids = _.map(records, function(record) {
[1;31mpkgcloud/rackspace/dns/client/records.js, line 253, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 12, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 13, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs'),
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore'),
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 15, character 5:[0m Expected 'dns' at column 3, not column 5.
dns = pkgcloud.providers.rackspace.dns;
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 32, character 15:[0m Expected exactly one space between 'typeof' and '('.
if (typeof(details) === 'function') {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 37, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 48, character 9:[0m Expected 'return' at column 11, not column 9.
return new dns.Zone(self, result);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 49, character 7:[0m Expected '}' at column 9, not column 7.
}), res);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 63, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 89, character 9:[0m Unexpected 'else' after 'return'.
return callback(err, zones[0]);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 91, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 91, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 92, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(new Error('Unexpected error when creating single zone'), zones);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 93, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 108, character 9:[0m Combine this with the previous 'var' statement.
var listOfZones = [];
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 111, character 30:[0m Expected '{' and instead saw 'throw'.
if (!zone[required]) throw new Error('details.' +
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 111, character 30:[0m Expected 'throw' at column 9, not column 30.
if (!zone[required]) throw new Error('details.' +
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 120, character 29:[0m Expected exactly one space between 'typeof' and '('.
if (zone.ttl && typeof(zone.ttl) === 'number' && zone.ttl >= 300) {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 131, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 144, character 7:[0m Expected '}' at column 9, not column 7.
}));
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 163, character 31:[0m Expected '{' and instead saw 'throw'.
if (!details[required]) throw new Error('details.' +
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 163, character 31:[0m Expected 'throw' at column 7, not column 31.
if (!details[required]) throw new Error('details.' +
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 172, character 9:[0m Combine this with the previous 'var' statement.
var importedZone = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 177, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 190, character 9:[0m Expected 'return' at column 11, not column 9.
return new dns.Zone(self, domain);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 191, character 7:[0m Expected '}' at column 9, not column 7.
})[0]);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 207, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 239, character 9:[0m Combine this with the previous 'var' statement.
var data = [];
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 256, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 264, character 48:[0m Expected exactly one space between 'function' and '('.
self._asyncRequest(requestOptions, function(err) {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 290, character 15:[0m Expected exactly one space between 'typeof' and '('.
if (typeof(options) === 'function') {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 295, character 9:[0m Combine this with the previous 'var' statement.
var zoneIds = [];
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 301, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 301, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 302, character 9:[0m Expected 'zoneIds' at column 11, not column 9.
zoneIds.push(zone);
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 303, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 306, character 9:[0m Combine this with the previous 'var' statement.
var deleteSubzones = typeof options.deleteSubzones === 'boolean'
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 313, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 315, character 29:[0m Expected exactly one space between 'function' and '('.
zoneIds.map(function(z) { return 'id=' + z }).join('&') +
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 315, character 51:[0m Expected ';' and instead saw '}'.
zoneIds.map(function(z) { return 'id=' + z }).join('&') +
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 320, character 48:[0m Expected exactly one space between 'function' and '('.
self._asyncRequest(requestOptions, function(err) {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 335, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 337, character 15:[0m Expected exactly one space between 'typeof' and '('.
if (typeof(options) === 'function') {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 341, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 349, character 8:[0m Expected ';' and instead saw '}'.
}
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 390, character 9:[0m Expected 'zoneId' at column 7, not column 9.
zoneId = zone instanceof dns.Zone ? zone.id : zone;
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 392, character 15:[0m Expected exactly one space between 'typeof' and '('.
if (typeof(options) === 'function') {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 397, character 9:[0m Combine this with the previous 'var' statement.
var requestOptions = {
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 406, character 5:[0m Expected 'modifyEmailAddress' at column 7, not column 5.
'modifyEmailAddress', 'modifyRecordData']));
[1;31mpkgcloud/rackspace/dns/client/zones.js, line 406, character 5:[0m Too many errors. (92% scanned).

[1;31mpkgcloud/rackspace/identity/rackspaceIdentity.js, line 16, character 20:[0m 'RackspaceIdentity' was used before it was defined.
exports.Identity = RackspaceIdentity = function (options) {
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/loadbalancer/loadbalancer'),
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 45, character 42:[0m Expected exactly one space between 'function' and '('.
LoadBalancer.prototype.refresh = function(callback) {
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 58, character 43:[0m Expected exactly one space between 'function' and '('.
LoadBalancer.prototype.getNodes = function(callback) {
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 62, character 42:[0m Expected exactly one space between 'function' and '('.
LoadBalancer.prototype.addNode = function(node, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 66, character 43:[0m Expected exactly one space between 'function' and '('.
LoadBalancer.prototype.addNodes = function(nodes, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 70, character 45:[0m Expected exactly one space between 'function' and '('.
LoadBalancer.prototype.updateNode = function(node, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/loadbalancer.js, line 78, character 46:[0m Expected exactly one space between 'function' and '('.
LoadBalancer.prototype.removeNodes = function(nodes, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/node.js, line 11, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../core/loadbalancer/node'),
[1;31mpkgcloud/rackspace/loadbalancer/node.js, line 12, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/loadbalancer/node.js, line 25, character 7:[0m Missing radix parameter.
? parseInt(details.loadBalancerId) : details.loadBalancerId;
[1;31mpkgcloud/rackspace/loadbalancer/protocols.js, line 17, character 6:[0m Expected 'DNS_UDP' at column 3, not column 6.
}, DNS_UDP: {
[1;31mpkgcloud/rackspace/loadbalancer/virtualip.js, line 12, character 82:[0m Expected ';' and instead saw '}'.
throw new Error('VirtualIp must be constructed with at-least basic details.')
[1;31mpkgcloud/rackspace/loadbalancer/client/index.js, line 11, character 5:[0m Expected 'rackspace' at column 3, not column 5.
rackspace = require('../../client'),
[1;31mpkgcloud/rackspace/loadbalancer/client/index.js, line 12, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/loadbalancer/client/index.js, line 13, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 12, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 13, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs'),
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore'),
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 15, character 5:[0m Expected 'lb' at column 3, not column 5.
lb = pkgcloud.providers.rackspace.loadbalancer;
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 31, character 9:[0m Expected 'requestOptions' at column 7, not column 9.
requestOptions = {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 32, character 11:[0m Expected 'path' at column 9, not column 11.
path: _urlPrefix
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 33, character 5:[0m Expected '}' at column 7, not column 5.
};
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 42, character 9:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 45, character 7:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.loadBalancers) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 45, character 7:[0m Expected 'else' at column 9, not column 7.
else if (!body || !body.loadBalancers) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 46, character 9:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 49, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 49, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 50, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(null, body.loadBalancers.map(function (loadBalancer) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 51, character 11:[0m Expected 'return' at column 13, not column 11.
return new lb.LoadBalancer(self, loadBalancer);
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 52, character 9:[0m Expected '}' at column 11, not column 9.
}));
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 53, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 66, character 28:[0m Expected exactly one space between 'function' and '('.
getLoadBalancer: function(loadBalancer, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 68, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 75, character 9:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 78, character 7:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.loadBalancer) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 78, character 7:[0m Expected 'else' at column 9, not column 7.
else if (!body || !body.loadBalancer) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 79, character 9:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 82, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 82, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 83, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(null, new lb.LoadBalancer(self, body.loadBalancer));
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 84, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 95, character 108:[0m Line too long.
* http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Create_Load_Balancer-d1e1635.html
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 110, character 31:[0m Expected exactly one space between 'function' and '('.
createLoadBalancer: function(details, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 112, character 9:[0m Expected 'createOptions' at column 7, not column 9.
createOptions = {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 113, character 11:[0m Expected 'path' at column 9, not column 11.
path: _urlPrefix,
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 114, character 11:[0m Expected 'method' at column 9, not column 11.
method: 'POST',
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 115, character 11:[0m Expected 'body' at column 9, not column 11.
body: {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 116, character 13:[0m Expected 'name' at column 11, not column 13.
name: details.name,
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 117, character 13:[0m Expected 'nodes' at column 11, not column 13.
nodes: details.nodes || [],
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 118, character 13:[0m Expected 'protocol' at column 11, not column 13.
protocol: details.protocol ? details.protocol.name : '',
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 119, character 13:[0m Expected 'port' at column 11, not column 13.
port: details.protocol ? details.protocol.port : '',
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 120, character 13:[0m Expected 'virtualIps' at column 11, not column 13.
virtualIps: details.virtualIps
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 121, character 11:[0m Expected '}' at column 9, not column 11.
}
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 122, character 9:[0m Expected '}' at column 7, not column 9.
};
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 129, character 9:[0m Combine this with the previous 'var' statement.
var validationErrors = validateLbInputs(createOptions.body);
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 129, character 28:[0m 'validateLbInputs' was used before it was defined.
var validationErrors = validateLbInputs(createOptions.body);
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 132, character 102:[0m Line too long.
return callback(new Error('Errors validating inputs for createLoadBalancer', validationErrors));
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 135, character 42:[0m Expected exactly one space between 'function' and '('.
self._request(createOptions, function(err, body) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 182, character 31:[0m Expected exactly one space between 'function' and '('.
deleteLoadBalancer: function(loadBalancer, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 184, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 274, character 25:[0m Expected exactly one space between 'function' and '('.
getSSLConfig: function(loadBalancer, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 276, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 303, character 28:[0m Expected exactly one space between 'function' and '('.
updateSSLConfig: function(loadBalancer, details, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/loadbalancers.js, line 303, character 28:[0m Too many errors. (25% scanned).

[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 11, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin = require('url-join'),
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 12, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../../lib/pkgcloud'),
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 13, character 5:[0m Expected 'errs' at column 3, not column 5.
errs = require('errs'),
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore'),
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 15, character 5:[0m Expected 'lb' at column 3, not column 5.
lb = pkgcloud.providers.rackspace.loadbalancer;
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 31, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 38, character 9:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 41, character 7:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.nodes) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 41, character 7:[0m Expected 'else' at column 9, not column 7.
else if (!body || !body.nodes) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 42, character 9:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 45, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 45, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 46, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(null, body.nodes.map(function (node) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 47, character 11:[0m Expected 'return' at column 13, not column 11.
return new lb.Node(self,
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 48, character 13:[0m Expected '_' at column 15, not column 13.
_.extend(node, { loadBalancerId: loadBalancerId }));
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 49, character 9:[0m Expected '}' at column 11, not column 9.
}), res);
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 50, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 57, character 137:[0m Line too long.
* @description add a node or array of nodes to the provided load balancer. Each of the addresses must be unique to this load balancer.
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 73, character 21:[0m Expected exactly one space between 'function' and '('.
addNodes: function(loadBalancer, nodes, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 75, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 82, character 9:[0m Combine this with the previous 'var' statement.
var postOptions = {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 88, character 51:[0m Expected exactly one space between 'function' and '('.
postOptions.body.nodes = _.map(nodes, function(node) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 94, character 9:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 97, character 7:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !body.nodes) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 97, character 7:[0m Expected 'else' at column 9, not column 7.
else if (!body || !body.nodes) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 98, character 9:[0m Unexpected 'else' after 'return'.
return callback(new Error('Unexpected empty response'));
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 101, character 7:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 101, character 7:[0m Expected 'else' at column 9, not column 7.
else {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 102, character 9:[0m Expected 'return' at column 11, not column 9.
return callback(null, body.nodes.map(function (node) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 103, character 11:[0m Expected 'return' at column 13, not column 11.
return new lb.Node(self,
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 104, character 13:[0m Expected '_' at column 15, not column 13.
_.extend(node, { loadBalancerId: loadBalancerId }));
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 105, character 9:[0m Expected '}' at column 11, not column 9.
}), res);
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 106, character 7:[0m Expected '}' at column 9, not column 7.
}
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 119, character 23:[0m Expected exactly one space between 'function' and '('.
updateNode: function(loadBalancer, node, callback) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 121, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 150, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 152, character 9:[0m Expected 'nodeId' at column 7, not column 9.
nodeId =
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 174, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 183, character 9:[0m Combine this with the previous 'var' statement.
var list = nodes.map(function (item) {
[1;31mpkgcloud/rackspace/loadbalancer/client/nodes.js, line 206, character 9:[0m Expected 'loadBalancerId' at column 7, not column 9.
loadBalancerId =
[1;31mpkgcloud/rackspace/storage/container.js, line 10, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../openstack/storage/container'),
[1;31mpkgcloud/rackspace/storage/container.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/storage/client/archive.js, line 10, character 5:[0m Expected 'filed' at column 3, not column 5.
filed = require('filed');
[1;31mpkgcloud/rackspace/storage/client/archive.js, line 20, character 27:[0m Expected exactly one space between 'function' and '('.
exports.extract = function(options, callback) {
[1;31mpkgcloud/rackspace/storage/client/archive.js, line 22, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/rackspace/storage/client/archive.js, line 27, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/rackspace/storage/client/archive.js, line 40, character 1:[0m Unexpected '(space)'.

[1;31mpkgcloud/rackspace/storage/client/archive.js, line 45, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (options.stream) {
[1;31mpkgcloud/rackspace/storage/client/archive.js, line 45, character 3:[0m Expected 'else' at column 5, not column 3.
else if (options.stream) {
[1;31mpkgcloud/rackspace/storage/client/archive.js, line 50, character 40:[0m Expected exactly one space between 'function' and '('.
inputStream.on('response', function(response) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 21, character 105:[0m Line too long.
* @param {String}            [options.marker]  the id of the first record to return in the current query
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 32, character 7:[0m Combine this with the previous 'var' statement.
var getContainerOpts = {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 41, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 43, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (!body || !(body instanceof Array)) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 43, character 5:[0m Expected 'else' at column 7, not column 5.
else if (!body || !(body instanceof Array)) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 44, character 49:[0m Expected ';' and instead saw '}'.
return new Error('Malformed API Response')
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 48, character 7:[0m Unexpected 'else' after 'return'.
return callback(null, body.map(function (container) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 52, character 5:[0m Expected exactly one space between '}' and 'else'.
else {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 52, character 5:[0m Expected 'else' at column 7, not column 5.
else {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 53, character 7:[0m Expected 'var' at column 9, not column 7.
var containers = [];
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 55, character 7:[0m Expected 'async' at column 9, not column 7.
async.forEachLimit(body, 10, function (c, next) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 56, character 9:[0m Expected 'var' at column 11, not column 9.
var container = new self.models.Container(self, c);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 58, character 9:[0m Expected 'containers' at column 11, not column 9.
containers.push(container);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 59, character 9:[0m Expected 'container' at column 11, not column 9.
container.refreshCdnDetails(function (err) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 60, character 11:[0m Expected 'if' at column 13, not column 11.
if (err) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 61, character 13:[0m Expected 'return' at column 15, not column 13.
return next(err);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 62, character 11:[0m Expected '}' at column 13, not column 11.
}
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 63, character 11:[0m Expected 'next' at column 13, not column 11.
next();
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 64, character 9:[0m Expected '}' at column 11, not column 9.
})
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 64, character 11:[0m Expected ';' and instead saw '}'.
})
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 65, character 7:[0m Expected '}' at column 9, not column 7.
}, function (err) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 66, character 9:[0m Expected 'callback' at column 11, not column 9.
callback(err, containers);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 67, character 7:[0m Expected '}' at column 9, not column 7.
});
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 68, character 5:[0m Expected '}' at column 7, not column 5.
}
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 117, character 105:[0m Line too long.
* @param {String}            [options.marker]  the id of the first record to return in the current query
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 118, character 108:[0m Line too long.
* @param {String}            [options.end_marker]  the id of the last record to return in the current query
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 119, character 102:[0m Line too long.
* @param {boolean}           [options.enabled_only]  only get containers which are cdn enabled = true
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 130, character 7:[0m Combine this with the previous 'var' statement.
var getContainerOpts = {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 139, character 25:[0m ['enabled_only'] is better written in dot notation.
getContainerOpts.qs['enabled_only'] = options.cdnOnly;
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 150, character 7:[0m Expected 'container' at column 9, not column 7.
container.cdnEnabled = container.cdn_enabled == 'true';
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 150, character 52:[0m Expected '===' and instead saw '=='.
container.cdnEnabled = container.cdn_enabled == 'true';
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 151, character 7:[0m Expected 'container' at column 9, not column 7.
container.logRetention = container.log_retention == 'true';
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 151, character 56:[0m Expected '===' and instead saw '=='.
container.logRetention = container.log_retention == 'true';
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 152, character 7:[0m Expected 'container' at column 9, not column 7.
container.cdnUri = container.cdn_uri;
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 153, character 7:[0m Expected 'container' at column 9, not column 7.
container.cdnSslUri = container.cdn_ssl_uri;
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 155, character 7:[0m Expected 'return' at column 9, not column 7.
return new self.models.Container(self, container);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 156, character 5:[0m Expected '}' at column 7, not column 5.
}));
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 172, character 51:[0m Expected exactly one space between 'function' and '('.
this._getCdnContainerDetails(container, function(err, details) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 185, character 101:[0m Line too long.
* @param {object|boolean}    options       an object with options, or boolean to just enable/disable
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 192, character 7:[0m Expected 'containerName' at column 5, not column 7.
containerName = container instanceof self.models.Container ? container.name : container,
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 193, character 7:[0m Expected 'enabled' at column 5, not column 7.
enabled = typeof options === 'boolean' ? options : options.enabled;
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 201, character 7:[0m Combine this with the previous 'var' statement.
var cdnOpts = {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 214, character 34:[0m Expected exactly one space between 'function' and '('.
self._request(cdnOpts, function(err) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 219, character 46:[0m Expected exactly one space between 'function' and '('.
self.getContainer(containerName, function(err, container) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 243, character 7:[0m Combine this with the previous 'var' statement.
var cdnOpts = {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 280, character 43:[0m Expected exactly one space between 'function' and '('.
exports._getCdnContainerDetails = function(container, callback) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 289, character 16:[0m Confusing use of '!'.
if (err && !(err.statusCode === 404)) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 290, character 7:[0m Unexpected 'else' after 'return'.
return callback(err);
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 292, character 5:[0m Expected exactly one space between '}' and 'else'.
else if (err) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 292, character 5:[0m Expected 'else' at column 7, not column 5.
else if (err) {
[1;31mpkgcloud/rackspace/storage/client/cdn-containers.js, line 292, character 5:[0m Too many errors. (92% scanned).

[1;31mpkgcloud/rackspace/storage/client/files.js, line 10, character 5:[0m Expected 'request' at column 3, not column 5.
request = require('request'),
[1;31mpkgcloud/rackspace/storage/client/files.js, line 11, character 5:[0m Expected 'utile' at column 3, not column 5.
utile = require('utile'),
[1;31mpkgcloud/rackspace/storage/client/files.js, line 12, character 5:[0m Expected 'base' at column 3, not column 5.
base = require('../../../core/storage'),
[1;31mpkgcloud/rackspace/storage/client/files.js, line 13, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud = require('../../../../pkgcloud'),
[1;31mpkgcloud/rackspace/storage/client/files.js, line 14, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/rackspace/storage/client/files.js, line 32, character 3:[0m Expected exactly one space between '}' and 'else'.
else if (typeof emails === 'string') {
[1;31mpkgcloud/rackspace/storage/client/files.js, line 32, character 3:[0m Expected 'else' at column 5, not column 3.
else if (typeof emails === 'string') {
[1;31mpkgcloud/rackspace/storage/client/files.js, line 36, character 7:[0m Combine this with the previous 'var' statement.
var purgeOptions = {
[1;31mpkgcloud/rackspace/storage/client/files.js, line 49, character 7:[0m Expected 'return' at column 5, not column 7.
return err
[1;31mpkgcloud/rackspace/storage/client/files.js, line 52, character 5:[0m Expected '}' at column 3, not column 5.
}
[1;31mpkgcloud/rackspace/storage/client/files.js, line 53, character 3:[0m Expected ')' at column 5, not column 3.
);
[1;31mpkgcloud/rackspace/storage/client/index.js, line 9, character 5:[0m Expected 'rackspace' at column 3, not column 5.
rackspace = require('../../client'),
[1;31mpkgcloud/rackspace/storage/client/index.js, line 10, character 5:[0m Expected 'StorageClient' at column 3, not column 5.
StorageClient = require('../../../openstack/storage/storageClient').StorageClient,
[1;31mpkgcloud/rackspace/storage/client/index.js, line 11, character 5:[0m Expected '_' at column 3, not column 5.
_ = require('underscore');
[1;31mpkgcloud/redistogo/database/client/index.js, line 9, character 5:[0m Expected 'request' at column 3, not column 5.
request   = require('request'),
[1;31mpkgcloud/redistogo/database/client/index.js, line 10, character 5:[0m Expected 'pkgcloud' at column 3, not column 5.
pkgcloud  = require('../../../../pkgcloud'),
[1;31mpkgcloud/redistogo/database/client/index.js, line 11, character 5:[0m Expected 'errs' at column 3, not column 5.
errs      = require('errs');
[1;31mpkgcloud/redistogo/database/client/index.js, line 36, character 29:[0m Expected '===' and instead saw '=='.
if (response.statusCode == 401 || response.statusCode == 403) {
[1;31mpkgcloud/redistogo/database/client/index.js, line 36, character 59:[0m Expected '===' and instead saw '=='.
if (response.statusCode == 401 || response.statusCode == 403) {
[1;31mpkgcloud/redistogo/database/client/index.js, line 49, character 7:[0m Unexpected 'else' after 'return'.
return callback(null, database);
[1;31mpkgcloud/redistogo/database/client/index.js, line 68, character 14:[0m ['plan'] is better written in dot notation.
if (!attrs['plan']) {
[1;31mpkgcloud/redistogo/database/client/index.js, line 69, character 11:[0m ['plan'] is better written in dot notation.
attrs['plan'] = 'nano';
[1;31mpkgcloud/redistogo/database/client/index.js, line 96, character 7:[0m Expected 'path' at column 5, not column 7.
path = '/instances',
[1;31mpkgcloud/redistogo/database/client/index.js, line 97, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/redistogo/database/client/index.js, line 122, character 7:[0m Expected 'path' at column 5, not column 7.
path = '/instances/' + id,
[1;31mpkgcloud/redistogo/database/client/index.js, line 123, character 7:[0m Expected 'self' at column 5, not column 7.
self = this;
[1;31mpkgcloud/redistogo/database/client/index.js, line 140, character 124:[0m Line too long.
uri: 'redis://nodejitsu:' +  response.password + '@' + response.label.split('-')[0] + '.redistogo.com:' + response.port,
[1;31mpkgcloud/telefonica/compute/client.js, line 9, character 5:[0m Expected 'urlJoin' at column 3, not column 5.
urlJoin   = require('url-join'),
[1;31mpkgcloud/telefonica/compute/client.js, line 10, character 5:[0m Expected 'joyent' at column 3, not column 5.
joyent    = require('../../joyent/compute');
[1;31mpkgcloud/telefonica/compute/client.js, line 29, character 5:[0m Expected 'options' at column 9, not column 5.
options : options.path));
1622 errors
